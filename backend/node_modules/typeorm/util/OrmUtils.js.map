{"version":3,"sources":["../../src/util/OrmUtils.ts"],"names":[],"mappings":"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","file":"OrmUtils.js","sourcesContent":["import { ObjectLiteral } from \"../common/ObjectLiteral\"\r\n\r\nexport class OrmUtils {\r\n    // -------------------------------------------------------------------------\r\n    // Public methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Chunks array into pieces.\r\n     */\r\n    static chunk<T>(array: T[], size: number): T[][] {\r\n        return Array.from(Array(Math.ceil(array.length / size)), (_, i) => {\r\n            return array.slice(i * size, i * size + size)\r\n        })\r\n    }\r\n\r\n    static splitClassesAndStrings<T>(\r\n        classesAndStrings: (string | T)[],\r\n    ): [T[], string[]] {\r\n        return [\r\n            classesAndStrings.filter(\r\n                (cls): cls is T => typeof cls !== \"string\",\r\n            ),\r\n            classesAndStrings.filter(\r\n                (str): str is string => typeof str === \"string\",\r\n            ),\r\n        ]\r\n    }\r\n\r\n    static groupBy<T, R>(\r\n        array: T[],\r\n        propertyCallback: (item: T) => R,\r\n    ): { id: R; items: T[] }[] {\r\n        return array.reduce((groupedArray, value) => {\r\n            const key = propertyCallback(value)\r\n            let grouped = groupedArray.find((i) => i.id === key)\r\n            if (!grouped) {\r\n                grouped = { id: key, items: [] }\r\n                groupedArray.push(grouped)\r\n            }\r\n            grouped.items.push(value)\r\n            return groupedArray\r\n        }, [] as Array<{ id: R; items: T[] }>)\r\n    }\r\n\r\n    static uniq<T>(array: T[], criteria?: (item: T) => any): T[]\r\n    static uniq<T, K extends keyof T>(array: T[], property: K): T[]\r\n    static uniq<T, K extends keyof T>(\r\n        array: T[],\r\n        criteriaOrProperty?: ((item: T) => any) | K,\r\n    ): T[] {\r\n        return array.reduce((uniqueArray, item) => {\r\n            let found: boolean = false\r\n            if (typeof criteriaOrProperty === \"function\") {\r\n                const itemValue = criteriaOrProperty(item)\r\n                found = !!uniqueArray.find(\r\n                    (uniqueItem) =>\r\n                        criteriaOrProperty(uniqueItem) === itemValue,\r\n                )\r\n            } else if (typeof criteriaOrProperty === \"string\") {\r\n                found = !!uniqueArray.find(\r\n                    (uniqueItem) =>\r\n                        uniqueItem[criteriaOrProperty] ===\r\n                        item[criteriaOrProperty],\r\n                )\r\n            } else {\r\n                found = uniqueArray.indexOf(item) !== -1\r\n            }\r\n\r\n            if (!found) uniqueArray.push(item)\r\n\r\n            return uniqueArray\r\n        }, [] as T[])\r\n    }\r\n\r\n    // Checks if it's an object made by Object.create(null), {} or new Object()\r\n    private static isPlainObject(item: any) {\r\n        if (item === null || item === undefined) {\r\n            return false\r\n        }\r\n\r\n        return !item.constructor || item.constructor === Object\r\n    }\r\n\r\n    private static mergeArrayKey(\r\n        target: any,\r\n        key: number,\r\n        value: any,\r\n        memo: Map<any, any>,\r\n    ) {\r\n        // Have we seen this before?  Prevent infinite recursion.\r\n        if (memo.has(value)) {\r\n            target[key] = memo.get(value)\r\n            return\r\n        }\r\n\r\n        if (value instanceof Promise) {\r\n            // Skip promises entirely.\r\n            // This is a hold-over from the old code & is because we don't want to pull in\r\n            // the lazy fields.  Ideally we'd remove these promises via another function first\r\n            // but for now we have to do it here.\r\n            return\r\n        }\r\n\r\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\r\n            target[key] = value\r\n            return\r\n        }\r\n\r\n        if (!target[key]) {\r\n            target[key] = Array.isArray(value) ? [] : {}\r\n        }\r\n\r\n        memo.set(value, target[key])\r\n        this.merge(target[key], value, memo)\r\n        memo.delete(value)\r\n    }\r\n\r\n    private static mergeObjectKey(\r\n        target: any,\r\n        key: string,\r\n        value: any,\r\n        memo: Map<any, any>,\r\n    ) {\r\n        // Have we seen this before?  Prevent infinite recursion.\r\n        if (memo.has(value)) {\r\n            Object.assign(target, { [key]: memo.get(value) })\r\n            return\r\n        }\r\n\r\n        if (value instanceof Promise) {\r\n            // Skip promises entirely.\r\n            // This is a hold-over from the old code & is because we don't want to pull in\r\n            // the lazy fields.  Ideally we'd remove these promises via another function first\r\n            // but for now we have to do it here.\r\n            return\r\n        }\r\n\r\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\r\n            Object.assign(target, { [key]: value })\r\n            return\r\n        }\r\n\r\n        if (!target[key]) {\r\n            Object.assign(target, { [key]: Array.isArray(value) ? [] : {} })\r\n        }\r\n\r\n        memo.set(value, target[key])\r\n        this.merge(target[key], value, memo)\r\n        memo.delete(value)\r\n    }\r\n\r\n    private static merge(\r\n        target: any,\r\n        source: any,\r\n        memo: Map<any, any> = new Map(),\r\n    ): any {\r\n        if (this.isPlainObject(target) && this.isPlainObject(source)) {\r\n            for (const key of Object.keys(source)) {\r\n                if (key === \"__proto__\") continue\r\n                this.mergeObjectKey(target, key, source[key], memo)\r\n            }\r\n        }\r\n\r\n        if (Array.isArray(target) && Array.isArray(source)) {\r\n            for (let key = 0; key < source.length; key++) {\r\n                this.mergeArrayKey(target, key, source[key], memo)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deep Object.assign.\r\n     */\r\n    static mergeDeep(target: any, ...sources: any[]): any {\r\n        if (!sources.length) {\r\n            return target\r\n        }\r\n\r\n        for (const source of sources) {\r\n            OrmUtils.merge(target, source)\r\n        }\r\n\r\n        return target\r\n    }\r\n\r\n    /**\r\n     * Deep compare objects.\r\n     *\r\n     * @see http://stackoverflow.com/a/1144249\r\n     */\r\n    static deepCompare(...args: any[]): boolean {\r\n        let i: any, l: any, leftChain: any, rightChain: any\r\n\r\n        if (arguments.length < 1) {\r\n            return true // Die silently? Don't know how to handle such case, please help...\r\n            // throw \"Need two or more arguments to compare\";\r\n        }\r\n\r\n        for (i = 1, l = arguments.length; i < l; i++) {\r\n            leftChain = [] // Todo: this can be cached\r\n            rightChain = []\r\n\r\n            if (\r\n                !this.compare2Objects(\r\n                    leftChain,\r\n                    rightChain,\r\n                    arguments[0],\r\n                    arguments[i],\r\n                )\r\n            ) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * Gets deeper value of object.\r\n     */\r\n    static deepValue(obj: ObjectLiteral, path: string) {\r\n        const segments = path.split(\".\")\r\n        for (let i = 0, len = segments.length; i < len; i++) {\r\n            obj = obj[segments[i]]\r\n        }\r\n        return obj\r\n    }\r\n\r\n    static replaceEmptyObjectsWithBooleans(obj: any) {\r\n        for (let key in obj) {\r\n            if (obj[key] && typeof obj[key] === \"object\") {\r\n                if (Object.keys(obj[key]).length === 0) {\r\n                    obj[key] = true\r\n                } else {\r\n                    this.replaceEmptyObjectsWithBooleans(obj[key])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static propertyPathsToTruthyObject(paths: string[]) {\r\n        let obj: any = {}\r\n        for (let path of paths) {\r\n            const props = path.split(\".\")\r\n            if (!props.length) continue\r\n\r\n            if (!obj[props[0]] || obj[props[0]] === true) {\r\n                obj[props[0]] = {}\r\n            }\r\n            let recursiveChild = obj[props[0]]\r\n            for (let [key, prop] of props.entries()) {\r\n                if (key === 0) continue\r\n\r\n                if (recursiveChild[prop]) {\r\n                    recursiveChild = recursiveChild[prop]\r\n                } else if (key === props.length - 1) {\r\n                    recursiveChild[prop] = {}\r\n                    recursiveChild = null\r\n                } else {\r\n                    recursiveChild[prop] = {}\r\n                    recursiveChild = recursiveChild[prop]\r\n                }\r\n            }\r\n        }\r\n        this.replaceEmptyObjectsWithBooleans(obj)\r\n        return obj\r\n    }\r\n\r\n    /**\r\n     * Check if two entity-id-maps are the same\r\n     */\r\n    static compareIds(\r\n        firstId: ObjectLiteral | undefined,\r\n        secondId: ObjectLiteral | undefined,\r\n    ): boolean {\r\n        if (\r\n            firstId === undefined ||\r\n            firstId === null ||\r\n            secondId === undefined ||\r\n            secondId === null\r\n        )\r\n            return false\r\n\r\n        // Optimized version for the common case\r\n        if (\r\n            ((typeof firstId.id === \"string\" &&\r\n                typeof secondId.id === \"string\") ||\r\n                (typeof firstId.id === \"number\" &&\r\n                    typeof secondId.id === \"number\")) &&\r\n            Object.keys(firstId).length === 1 &&\r\n            Object.keys(secondId).length === 1\r\n        ) {\r\n            return firstId.id === secondId.id\r\n        }\r\n\r\n        return OrmUtils.deepCompare(firstId, secondId)\r\n    }\r\n\r\n    /**\r\n     * Transforms given value into boolean value.\r\n     */\r\n    static toBoolean(value: any): boolean {\r\n        if (typeof value === \"boolean\") return value\r\n\r\n        if (typeof value === \"string\") return value === \"true\" || value === \"1\"\r\n\r\n        if (typeof value === \"number\") return value > 0\r\n\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * Composes an object from the given array of keys and values.\r\n     */\r\n    static zipObject(keys: any[], values: any[]): ObjectLiteral {\r\n        return keys.reduce((object, column, index) => {\r\n            object[column] = values[index]\r\n            return object\r\n        }, {} as ObjectLiteral)\r\n    }\r\n\r\n    /**\r\n     * Compares two arrays.\r\n     */\r\n    static isArraysEqual(arr1: any[], arr2: any[]): boolean {\r\n        if (arr1.length !== arr2.length) return false\r\n        return arr1.every((element) => {\r\n            return arr2.indexOf(element) !== -1\r\n        })\r\n    }\r\n\r\n    static areMutuallyExclusive<T>(...lists: T[][]): boolean {\r\n        const haveSharedObjects = lists.some((list) => {\r\n            const otherLists = lists.filter((otherList) => otherList !== list)\r\n            return list.some((item) =>\r\n                otherLists.some((otherList) => otherList.includes(item)),\r\n            )\r\n        })\r\n        return !haveSharedObjects\r\n    }\r\n\r\n    /**\r\n     * Parses the CHECK constraint on the specified column and returns\r\n     * all values allowed by the constraint or undefined if the constraint\r\n     * is not present.\r\n     */\r\n    static parseSqlCheckExpression(\r\n        sql: string,\r\n        columnName: string,\r\n    ): string[] | undefined {\r\n        const enumMatch = sql.match(\r\n            new RegExp(\r\n                `\"${columnName}\" varchar CHECK\\\\s*\\\\(\\\\s*\"${columnName}\"\\\\s+IN\\\\s*`,\r\n            ),\r\n        )\r\n\r\n        if (enumMatch && enumMatch.index) {\r\n            const afterMatch = sql.substring(\r\n                enumMatch.index + enumMatch[0].length,\r\n            )\r\n\r\n            // This is an enum\r\n            // all enum values stored as a comma separated list\r\n            const chars = afterMatch\r\n\r\n            /**\r\n             * * When outside quotes: empty string\r\n             * * When inside single quotes: `'`\r\n             */\r\n            let currentQuotes = \"\"\r\n            let nextValue = \"\"\r\n            const enumValues: string[] = []\r\n            for (let idx = 0; idx < chars.length; idx++) {\r\n                const char = chars[idx]\r\n                switch (char) {\r\n                    case \",\":\r\n                        if (currentQuotes == \"\") {\r\n                            enumValues.push(nextValue)\r\n                            nextValue = \"\"\r\n                        } else {\r\n                            nextValue += char\r\n                        }\r\n                        break\r\n                    case \"'\":\r\n                        if (currentQuotes == char) {\r\n                            const isNextCharQuote = chars[idx + 1] === char\r\n                            if (isNextCharQuote) {\r\n                                // double quote in sql should be treated as a\r\n                                // single quote that's part of the quoted string\r\n                                nextValue += char\r\n                                idx += 1 // skip that next quote\r\n                            } else {\r\n                                currentQuotes = \"\"\r\n                            }\r\n                        } else {\r\n                            currentQuotes = char\r\n                        }\r\n                        break\r\n                    case \")\":\r\n                        if (currentQuotes == \"\") {\r\n                            enumValues.push(nextValue)\r\n                            return enumValues\r\n                        } else {\r\n                            nextValue += char\r\n                        }\r\n                        break\r\n                    default:\r\n                        if (currentQuotes != \"\") {\r\n                            nextValue += char\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Private methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    private static compare2Objects(\r\n        leftChain: any,\r\n        rightChain: any,\r\n        x: any,\r\n        y: any,\r\n    ) {\r\n        let p\r\n\r\n        // remember that NaN === NaN returns false\r\n        // and isNaN(undefined) returns true\r\n        if (Number.isNaN(x) && Number.isNaN(y)) return true\r\n\r\n        // Compare primitives and functions.\r\n        // Check if both arguments link to the same object.\r\n        // Especially useful on the step where we compare prototypes\r\n        if (x === y) return true\r\n\r\n        // Unequal, but either is null or undefined (use case: jsonb comparison)\r\n        // PR #3776, todo: add tests\r\n        if (x === null || y === null || x === undefined || y === undefined)\r\n            return false\r\n\r\n        // Fix the buffer compare bug.\r\n        // See: https://github.com/typeorm/typeorm/issues/3654\r\n        if (\r\n            (typeof x.equals === \"function\" ||\r\n                typeof x.equals === \"function\") &&\r\n            x.equals(y)\r\n        )\r\n            return true\r\n\r\n        // Works in case when functions are created in constructor.\r\n        // Comparing dates is a common scenario. Another built-ins?\r\n        // We can even handle functions passed across iframes\r\n        if (\r\n            (typeof x === \"function\" && typeof y === \"function\") ||\r\n            (x instanceof Date && y instanceof Date) ||\r\n            (x instanceof RegExp && y instanceof RegExp) ||\r\n            (typeof x === \"string\" && typeof y === \"string\") ||\r\n            (typeof x === \"number\" && typeof y === \"number\")\r\n        )\r\n            return x.toString() === y.toString()\r\n\r\n        // At last checking prototypes as good as we can\r\n        if (!(typeof x === \"object\" && typeof y === \"object\")) return false\r\n\r\n        if (\r\n            Object.prototype.isPrototypeOf.call(x, y) ||\r\n            Object.prototype.isPrototypeOf.call(y, x)\r\n        )\r\n            return false\r\n\r\n        if (x.constructor !== y.constructor) return false\r\n\r\n        if (x.prototype !== y.prototype) return false\r\n\r\n        // Check for infinitive linking loops\r\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\r\n            return false\r\n\r\n        // Quick checking of one object being a subset of another.\r\n        // todo: cache the structure of arguments[0] for performance\r\n        for (p in y) {\r\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n                return false\r\n            } else if (typeof y[p] !== typeof x[p]) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        for (p in x) {\r\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n                return false\r\n            } else if (typeof y[p] !== typeof x[p]) {\r\n                return false\r\n            }\r\n\r\n            switch (typeof x[p]) {\r\n                case \"object\":\r\n                case \"function\":\r\n                    leftChain.push(x)\r\n                    rightChain.push(y)\r\n\r\n                    if (\r\n                        !this.compare2Objects(leftChain, rightChain, x[p], y[p])\r\n                    ) {\r\n                        return false\r\n                    }\r\n\r\n                    leftChain.pop()\r\n                    rightChain.pop()\r\n                    break\r\n\r\n                default:\r\n                    if (x[p] !== y[p]) {\r\n                        return false\r\n                    }\r\n                    break\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n}\r\n"],"sourceRoot":".."}