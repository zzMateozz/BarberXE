{"version":3,"sources":["../../src/util/InstanceChecker.ts"],"names":[],"mappings":"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","file":"InstanceChecker.js","sourcesContent":["import type { MongoEntityManager } from \"../entity-manager/MongoEntityManager\"\r\nimport type { SqljsEntityManager } from \"../entity-manager/SqljsEntityManager\"\r\nimport type { EntitySchema } from \"../entity-schema/EntitySchema\"\r\nimport type { FindOperator } from \"../find-options/FindOperator\"\r\nimport type { EqualOperator } from \"../find-options/EqualOperator\"\r\nimport type { Query } from \"../driver/Query\"\r\nimport type { RdbmsSchemaBuilder } from \"../schema-builder/RdbmsSchemaBuilder\"\r\nimport type { Subject } from \"../persistence/Subject\"\r\nimport type { SelectQueryBuilder } from \"../query-builder/SelectQueryBuilder\"\r\nimport type { UpdateQueryBuilder } from \"../query-builder/UpdateQueryBuilder\"\r\nimport type { DeleteQueryBuilder } from \"../query-builder/DeleteQueryBuilder\"\r\nimport type { SoftDeleteQueryBuilder } from \"../query-builder/SoftDeleteQueryBuilder\"\r\nimport type { InsertQueryBuilder } from \"../query-builder/InsertQueryBuilder\"\r\nimport type { RelationQueryBuilder } from \"../query-builder/RelationQueryBuilder\"\r\nimport type { Brackets } from \"../query-builder/Brackets\"\r\nimport type { Table } from \"../schema-builder/table/Table\"\r\nimport type { TableCheck } from \"../schema-builder/table/TableCheck\"\r\nimport type { TableColumn } from \"../schema-builder/table/TableColumn\"\r\nimport type { TableExclusion } from \"../schema-builder/table/TableExclusion\"\r\nimport type { TableForeignKey } from \"../schema-builder/table/TableForeignKey\"\r\nimport type { TableIndex } from \"../schema-builder/table/TableIndex\"\r\nimport type { TableUnique } from \"../schema-builder/table/TableUnique\"\r\nimport type { View } from \"../schema-builder/view/View\"\r\nimport type { NotBrackets } from \"../query-builder/NotBrackets\"\r\nimport type { EntityMetadata } from \"../metadata/EntityMetadata\"\r\nimport type { ColumnMetadata } from \"../metadata/ColumnMetadata\"\r\nimport type { MssqlParameter } from \"../driver/sqlserver/MssqlParameter\"\r\nimport { DataSource } from \"../data-source\"\r\nimport { BaseEntity } from \"../repository/BaseEntity\"\r\n\r\nexport class InstanceChecker {\r\n    static isMssqlParameter(obj: unknown): obj is MssqlParameter {\r\n        return this.check(obj, \"MssqlParameter\")\r\n    }\r\n    static isEntityMetadata(obj: unknown): obj is EntityMetadata {\r\n        return this.check(obj, \"EntityMetadata\")\r\n    }\r\n    static isColumnMetadata(obj: unknown): obj is ColumnMetadata {\r\n        return this.check(obj, \"ColumnMetadata\")\r\n    }\r\n    static isSelectQueryBuilder(obj: unknown): obj is SelectQueryBuilder<any> {\r\n        return this.check(obj, \"SelectQueryBuilder\")\r\n    }\r\n    static isInsertQueryBuilder(obj: unknown): obj is InsertQueryBuilder<any> {\r\n        return this.check(obj, \"InsertQueryBuilder\")\r\n    }\r\n    static isDeleteQueryBuilder(obj: unknown): obj is DeleteQueryBuilder<any> {\r\n        return this.check(obj, \"DeleteQueryBuilder\")\r\n    }\r\n    static isUpdateQueryBuilder(obj: unknown): obj is UpdateQueryBuilder<any> {\r\n        return this.check(obj, \"UpdateQueryBuilder\")\r\n    }\r\n    static isSoftDeleteQueryBuilder(\r\n        obj: unknown,\r\n    ): obj is SoftDeleteQueryBuilder<any> {\r\n        return this.check(obj, \"SoftDeleteQueryBuilder\")\r\n    }\r\n    static isRelationQueryBuilder(\r\n        obj: unknown,\r\n    ): obj is RelationQueryBuilder<any> {\r\n        return this.check(obj, \"RelationQueryBuilder\")\r\n    }\r\n    static isBrackets(obj: unknown): obj is Brackets {\r\n        return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\")\r\n    }\r\n    static isNotBrackets(obj: unknown): obj is NotBrackets {\r\n        return this.check(obj, \"NotBrackets\")\r\n    }\r\n    static isSubject(obj: unknown): obj is Subject {\r\n        return this.check(obj, \"Subject\")\r\n    }\r\n    static isRdbmsSchemaBuilder(obj: unknown): obj is RdbmsSchemaBuilder {\r\n        return this.check(obj, \"RdbmsSchemaBuilder\")\r\n    }\r\n    static isMongoEntityManager(obj: unknown): obj is MongoEntityManager {\r\n        return this.check(obj, \"MongoEntityManager\")\r\n    }\r\n    static isSqljsEntityManager(obj: unknown): obj is SqljsEntityManager {\r\n        return this.check(obj, \"SqljsEntityManager\")\r\n    }\r\n    static isEntitySchema(obj: unknown): obj is EntitySchema {\r\n        return this.check(obj, \"EntitySchema\")\r\n    }\r\n    static isBaseEntityConstructor(obj: unknown): obj is typeof BaseEntity {\r\n        return (\r\n            typeof obj === \"function\" &&\r\n            typeof (obj as typeof BaseEntity).hasId === \"function\" &&\r\n            typeof (obj as typeof BaseEntity).save === \"function\" &&\r\n            typeof (obj as typeof BaseEntity).useDataSource === \"function\"\r\n        )\r\n    }\r\n    static isFindOperator(obj: unknown): obj is FindOperator<any> {\r\n        return (\r\n            this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\")\r\n        )\r\n    }\r\n    static isEqualOperator(obj: unknown): obj is EqualOperator<any> {\r\n        return this.check(obj, \"EqualOperator\")\r\n    }\r\n    static isQuery(obj: unknown): obj is Query {\r\n        return this.check(obj, \"Query\")\r\n    }\r\n    static isTable(obj: unknown): obj is Table {\r\n        return this.check(obj, \"Table\")\r\n    }\r\n    static isTableCheck(obj: unknown): obj is TableCheck {\r\n        return this.check(obj, \"TableCheck\")\r\n    }\r\n    static isTableColumn(obj: unknown): obj is TableColumn {\r\n        return this.check(obj, \"TableColumn\")\r\n    }\r\n    static isTableExclusion(obj: unknown): obj is TableExclusion {\r\n        return this.check(obj, \"TableExclusion\")\r\n    }\r\n    static isTableForeignKey(obj: unknown): obj is TableForeignKey {\r\n        return this.check(obj, \"TableForeignKey\")\r\n    }\r\n    static isTableIndex(obj: unknown): obj is TableIndex {\r\n        return this.check(obj, \"TableIndex\")\r\n    }\r\n    static isTableUnique(obj: unknown): obj is TableUnique {\r\n        return this.check(obj, \"TableUnique\")\r\n    }\r\n    static isView(obj: unknown): obj is View {\r\n        return this.check(obj, \"View\")\r\n    }\r\n    static isDataSource(obj: unknown): obj is DataSource {\r\n        return this.check(obj, \"DataSource\")\r\n    }\r\n\r\n    private static check(obj: unknown, name: string) {\r\n        return (\r\n            typeof obj === \"object\" &&\r\n            obj !== null &&\r\n            (obj as { \"@instanceof\": Symbol })[\"@instanceof\"] ===\r\n                Symbol.for(name)\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":".."}