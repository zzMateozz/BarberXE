{"version":3,"sources":["../../src/util/RandomGenerator.ts"],"names":[],"mappings":"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","file":"RandomGenerator.js","sourcesContent":["export class RandomGenerator {\r\n    /**\r\n     *  discuss at: http://locutus.io/php/sha1/\r\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\r\n     * improved by: Michael White (http://getsprink.com)\r\n     * improved by: Kevin van Zonneveld (http://kvz.io)\r\n     *    input by: Brett Zamir (http://brett-zamir.me)\r\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\r\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\r\n     *      note 1: in a steaming fashion for faster and more efficient hashing\r\n     *   example 1: sha1('Kevin van Zonneveld')\r\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\r\n     */\r\n    static sha1(str: string) {\r\n        let _rotLeft = function (n: any, s: any) {\r\n            let t4 = (n << s) | (n >>> (32 - s))\r\n            return t4\r\n        }\r\n\r\n        let _cvtHex = function (val: any) {\r\n            let str = \"\"\r\n            let i\r\n            let v\r\n\r\n            for (i = 7; i >= 0; i--) {\r\n                v = (val >>> (i * 4)) & 0x0f\r\n                str += v.toString(16)\r\n            }\r\n            return str\r\n        }\r\n\r\n        let blockstart\r\n        let i, j\r\n        let W = new Array(80)\r\n        let H0 = 0x67452301\r\n        let H1 = 0xefcdab89\r\n        let H2 = 0x98badcfe\r\n        let H3 = 0x10325476\r\n        let H4 = 0xc3d2e1f0\r\n        let A, B, C, D, E\r\n        let temp\r\n\r\n        // utf8_encode\r\n        str = /*unescape*/ encodeURIComponent(str)\r\n        let strLen = str.length\r\n\r\n        let wordArray = []\r\n        for (i = 0; i < strLen - 3; i += 4) {\r\n            j =\r\n                (str.charCodeAt(i) << 24) |\r\n                (str.charCodeAt(i + 1) << 16) |\r\n                (str.charCodeAt(i + 2) << 8) |\r\n                str.charCodeAt(i + 3)\r\n            wordArray.push(j)\r\n        }\r\n\r\n        switch (strLen % 4) {\r\n            case 0:\r\n                i = 0x080000000\r\n                break\r\n            case 1:\r\n                i = (str.charCodeAt(strLen - 1) << 24) | 0x0800000\r\n                break\r\n            case 2:\r\n                i =\r\n                    (str.charCodeAt(strLen - 2) << 24) |\r\n                    (str.charCodeAt(strLen - 1) << 16) |\r\n                    0x08000\r\n                break\r\n            case 3:\r\n                i =\r\n                    (str.charCodeAt(strLen - 3) << 24) |\r\n                    (str.charCodeAt(strLen - 2) << 16) |\r\n                    (str.charCodeAt(strLen - 1) << 8) |\r\n                    0x80\r\n                break\r\n        }\r\n\r\n        wordArray.push(i)\r\n\r\n        while (wordArray.length % 16 !== 14) {\r\n            wordArray.push(0)\r\n        }\r\n\r\n        wordArray.push(strLen >>> 29)\r\n        wordArray.push((strLen << 3) & 0x0ffffffff)\r\n\r\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\r\n            for (i = 0; i < 16; i++) {\r\n                W[i] = wordArray[blockstart + i]\r\n            }\r\n            for (i = 16; i <= 79; i++) {\r\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\r\n            }\r\n\r\n            A = H0\r\n            B = H1\r\n            C = H2\r\n            D = H3\r\n            E = H4\r\n\r\n            for (i = 0; i <= 19; i++) {\r\n                temp =\r\n                    (_rotLeft(A, 5) +\r\n                        ((B & C) | (~B & D)) +\r\n                        E +\r\n                        W[i] +\r\n                        0x5a827999) &\r\n                    0x0ffffffff\r\n                E = D\r\n                D = C\r\n                C = _rotLeft(B, 30)\r\n                B = A\r\n                A = temp\r\n            }\r\n\r\n            for (i = 20; i <= 39; i++) {\r\n                temp =\r\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1) &\r\n                    0x0ffffffff\r\n                E = D\r\n                D = C\r\n                C = _rotLeft(B, 30)\r\n                B = A\r\n                A = temp\r\n            }\r\n\r\n            for (i = 40; i <= 59; i++) {\r\n                temp =\r\n                    (_rotLeft(A, 5) +\r\n                        ((B & C) | (B & D) | (C & D)) +\r\n                        E +\r\n                        W[i] +\r\n                        0x8f1bbcdc) &\r\n                    0x0ffffffff\r\n                E = D\r\n                D = C\r\n                C = _rotLeft(B, 30)\r\n                B = A\r\n                A = temp\r\n            }\r\n\r\n            for (i = 60; i <= 79; i++) {\r\n                temp =\r\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6) &\r\n                    0x0ffffffff\r\n                E = D\r\n                D = C\r\n                C = _rotLeft(B, 30)\r\n                B = A\r\n                A = temp\r\n            }\r\n\r\n            H0 = (H0 + A) & 0x0ffffffff\r\n            H1 = (H1 + B) & 0x0ffffffff\r\n            H2 = (H2 + C) & 0x0ffffffff\r\n            H3 = (H3 + D) & 0x0ffffffff\r\n            H4 = (H4 + E) & 0x0ffffffff\r\n        }\r\n\r\n        temp =\r\n            _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4)\r\n        return temp.toLowerCase()\r\n    }\r\n}\r\n"],"sourceRoot":".."}