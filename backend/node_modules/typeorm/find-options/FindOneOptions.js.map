{"version":3,"sources":["../../src/find-options/FindOneOptions.ts"],"names":[],"mappings":"","file":"FindOneOptions.js","sourcesContent":["import { JoinOptions } from \"./JoinOptions\"\r\nimport { FindOptionsWhere } from \"./FindOptionsWhere\"\r\nimport {\r\n    FindOptionsSelect,\r\n    FindOptionsSelectByString,\r\n} from \"./FindOptionsSelect\"\r\nimport {\r\n    FindOptionsRelationByString,\r\n    FindOptionsRelations,\r\n} from \"./FindOptionsRelations\"\r\nimport { FindOptionsOrder } from \"./FindOptionsOrder\"\r\n\r\n/**\r\n * Defines a special criteria to find specific entity.\r\n */\r\nexport interface FindOneOptions<Entity = any> {\r\n    /**\r\n     * Adds a comment with the supplied string in the generated query.  This is\r\n     * helpful for debugging purposes, such as finding a specific query in the\r\n     * database server's logs, or for categorization using an APM product.\r\n     */\r\n    comment?: string\r\n\r\n    /**\r\n     * Specifies what columns should be retrieved.\r\n     */\r\n    select?: FindOptionsSelect<Entity> | FindOptionsSelectByString<Entity>\r\n\r\n    /**\r\n     * Simple condition that should be applied to match entities.\r\n     */\r\n    where?: FindOptionsWhere<Entity>[] | FindOptionsWhere<Entity>\r\n\r\n    /**\r\n     * Indicates what relations of entity should be loaded (simplified left join form).\r\n     */\r\n    relations?: FindOptionsRelations<Entity> | FindOptionsRelationByString\r\n\r\n    /**\r\n     * Specifies how relations must be loaded - using \"joins\" or separate queries.\r\n     * If you are loading too much data with nested joins it's better to load relations\r\n     * using separate queries.\r\n     *\r\n     * Default strategy is \"join\", but default can be customized in connection options.\r\n     */\r\n    relationLoadStrategy?: \"join\" | \"query\"\r\n\r\n    /**\r\n     * Specifies what relations should be loaded.\r\n     *\r\n     * @deprecated\r\n     */\r\n    join?: JoinOptions\r\n\r\n    /**\r\n     * Order, in which entities should be ordered.\r\n     */\r\n    order?: FindOptionsOrder<Entity>\r\n\r\n    /**\r\n     * Enables or disables query result caching.\r\n     */\r\n    cache?: boolean | number | { id: any; milliseconds: number }\r\n\r\n    /**\r\n     * Indicates what locking mode should be used.\r\n     *\r\n     * Note: For lock tables, you must specify the table names and not the relation names\r\n     */\r\n    lock?:\r\n        | { mode: \"optimistic\"; version: number | Date }\r\n        | {\r\n              mode:\r\n                  | \"pessimistic_read\"\r\n                  | \"pessimistic_write\"\r\n                  | \"dirty_read\"\r\n                  /*\r\n                    \"pessimistic_partial_write\" and \"pessimistic_write_or_fail\" are deprecated and\r\n                    will be removed in a future version.\r\n\r\n                    Use onLocked instead.\r\n                 */\r\n                  | \"pessimistic_partial_write\"\r\n                  | \"pessimistic_write_or_fail\"\r\n                  | \"for_no_key_update\"\r\n                  | \"for_key_share\"\r\n              tables?: string[]\r\n              onLocked?: \"nowait\" | \"skip_locked\"\r\n          }\r\n\r\n    /**\r\n     * Indicates if soft-deleted rows should be included in entity result.\r\n     */\r\n    withDeleted?: boolean\r\n\r\n    /**\r\n     * If sets to true then loads all relation ids of the entity and maps them into relation values (not relation objects).\r\n     * If array of strings is given then loads only relation ids of the given properties.\r\n     */\r\n    loadRelationIds?:\r\n        | boolean\r\n        | { relations?: string[]; disableMixedMap?: boolean } // todo: extract options into separate interface, reuse\r\n\r\n    /**\r\n     * Indicates if eager relations should be loaded or not.\r\n     * By default, they are loaded when find methods are used.\r\n     */\r\n    loadEagerRelations?: boolean\r\n\r\n    /**\r\n     * If this is set to true, SELECT query in a `find` method will be executed in a transaction.\r\n     */\r\n    transaction?: boolean\r\n}\r\n"],"sourceRoot":".."}