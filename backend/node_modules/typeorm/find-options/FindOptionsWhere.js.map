{"version":3,"sources":["../../src/find-options/FindOptionsWhere.ts"],"names":[],"mappings":"","file":"FindOptionsWhere.js","sourcesContent":["import { FindOperator } from \"./FindOperator\"\r\nimport { ObjectId } from \"../driver/mongodb/typings\"\r\nimport { EqualOperator } from \"./EqualOperator\"\r\n\r\n/**\r\n * A single property handler for FindOptionsWhere.\r\n *\r\n * The reason why we have both \"PropertyToBeNarrowed\" and \"Property\" is that Union is narrowed down when extends is used.\r\n * It means the result of FindOptionsWhereProperty<1 | 2> doesn't include FindOperator<1 | 2> but FindOperator<1> | FindOperator<2>.\r\n * So we keep the original Union as Original and pass it to the FindOperator too. Original remains Union as extends is not used for it.\r\n */\r\nexport type FindOptionsWhereProperty<\r\n    PropertyToBeNarrowed,\r\n    Property = PropertyToBeNarrowed,\r\n> = PropertyToBeNarrowed extends Promise<infer I>\r\n    ? FindOptionsWhereProperty<NonNullable<I>>\r\n    : PropertyToBeNarrowed extends Array<infer I>\r\n    ? FindOptionsWhereProperty<NonNullable<I>>\r\n    : PropertyToBeNarrowed extends Function\r\n    ? never\r\n    : PropertyToBeNarrowed extends Buffer\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends Date\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends ObjectId\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends string\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends number\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends boolean\r\n    ? Property | FindOperator<Property>\r\n    : PropertyToBeNarrowed extends object\r\n    ?\r\n          | FindOptionsWhere<Property>\r\n          | FindOptionsWhere<Property>[]\r\n          | EqualOperator<Property>\r\n          | FindOperator<any>\r\n          | boolean\r\n          | Property\r\n    : Property | FindOperator<Property>\r\n\r\n/**\r\n * Used for find operations.\r\n */\r\nexport type FindOptionsWhere<Entity> = {\r\n    [P in keyof Entity]?: P extends \"toString\"\r\n        ? unknown\r\n        : FindOptionsWhereProperty<NonNullable<Entity[P]>>\r\n}\r\n"],"sourceRoot":".."}