{"version":3,"sources":["../../src/entity-schema/EntitySchemaEmbeddedError.ts"],"names":[],"mappings":";;;AAAA,oCAAuC;AAEvC,MAAa,yBAA0B,SAAQ,oBAAY;IACvD,MAAM,CAAC,qCAAqC,CACxC,KAAa;QAEb,OAAO,IAAI,yBAAyB,CAChC,gCAAgC,KAAK,iBAAiB,CACzD,CAAA;IACL,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,KAAa;QACvC,OAAO,IAAI,yBAAyB,CAChC,gCAAgC,KAAK,wBAAwB,CAChE,CAAA;IACL,CAAC;IAED,YAAY,OAAe;QACvB,KAAK,CAAC,OAAO,CAAC,CAAA;IAClB,CAAC;CACJ;AAlBD,8DAkBC","file":"EntitySchemaEmbeddedError.js","sourcesContent":["import { TypeORMError } from \"../error\"\r\n\r\nexport class EntitySchemaEmbeddedError extends TypeORMError {\r\n    static createEntitySchemaIsRequiredException(\r\n        field: string,\r\n    ): EntitySchemaEmbeddedError {\r\n        return new EntitySchemaEmbeddedError(\r\n            `EntitySchema is required for ${field} embedded field`,\r\n        )\r\n    }\r\n\r\n    static createTargetIsRequired(field: string): EntitySchemaEmbeddedError {\r\n        return new EntitySchemaEmbeddedError(\r\n            `Target field is required for ${field} embedded EntitySchema`,\r\n        )\r\n    }\r\n\r\n    constructor(message: string) {\r\n        super(message)\r\n    }\r\n}\r\n"],"sourceRoot":".."}