{"version":3,"sources":["../../src/logger/AdvancedConsoleLogger.ts"],"names":[],"mappings":";;;AAAA,6DAAyD;AACzD,qDAAiD;AAIjD;;;GAGG;AACH,MAAa,qBAAsB,SAAQ,+BAAc;IACrD;;OAEG;IACO,QAAQ,CACd,KAAe,EACf,UAAqC,EACrC,WAAyB;QAEzB,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAA;QAEpD,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE,CAAC;YAC3B,QAAQ,OAAO,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC;gBAC5B,KAAK,KAAK,CAAC;gBACX,KAAK,cAAc,CAAC;gBACpB,KAAK,WAAW;oBACZ,6BAAa,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;oBAC1C,MAAK;gBAET,KAAK,MAAM,CAAC;gBACZ,KAAK,OAAO;oBACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;wBACjB,6BAAa,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAA;oBAC1D,CAAC;yBAAM,CAAC;wBACJ,6BAAa,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;oBAC9C,CAAC;oBACD,MAAK;gBAET,KAAK,MAAM,CAAC;gBACZ,KAAK,YAAY;oBACb,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;wBACjB,6BAAa,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAA;oBAC1D,CAAC;yBAAM,CAAC;wBACJ,OAAO,CAAC,IAAI,CACR,6BAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC9C,CAAA;oBACL,CAAC;oBACD,MAAK;gBAET,KAAK,OAAO,CAAC;gBACb,KAAK,aAAa;oBACd,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;wBACjB,6BAAa,CAAC,QAAQ,CAClB,OAAO,CAAC,MAAM,EACd,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAC1B,CAAA;oBACL,CAAC;yBAAM,CAAC;wBACJ,OAAO,CAAC,KAAK,CACT,6BAAa,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC/C,CAAA;oBACL,CAAC;oBACD,MAAK;YACb,CAAC;QACL,CAAC;IACL,CAAC;CACJ;AAvDD,sDAuDC","file":"AdvancedConsoleLogger.js","sourcesContent":["import { PlatformTools } from \"../platform/PlatformTools\"\r\nimport { AbstractLogger } from \"./AbstractLogger\"\r\nimport { LogLevel, LogMessage } from \"./Logger\"\r\nimport { QueryRunner } from \"../query-runner/QueryRunner\"\r\n\r\n/**\r\n * Performs logging of the events in TypeORM.\r\n * This version of logger uses console to log events and use syntax highlighting.\r\n */\r\nexport class AdvancedConsoleLogger extends AbstractLogger {\r\n    /**\r\n     * Write log to specific output.\r\n     */\r\n    protected writeLog(\r\n        level: LogLevel,\r\n        logMessage: LogMessage | LogMessage[],\r\n        queryRunner?: QueryRunner,\r\n    ) {\r\n        const messages = this.prepareLogMessages(logMessage)\r\n\r\n        for (let message of messages) {\r\n            switch (message.type ?? level) {\r\n                case \"log\":\r\n                case \"schema-build\":\r\n                case \"migration\":\r\n                    PlatformTools.log(String(message.message))\r\n                    break\r\n\r\n                case \"info\":\r\n                case \"query\":\r\n                    if (message.prefix) {\r\n                        PlatformTools.logInfo(message.prefix, message.message)\r\n                    } else {\r\n                        PlatformTools.log(String(message.message))\r\n                    }\r\n                    break\r\n\r\n                case \"warn\":\r\n                case \"query-slow\":\r\n                    if (message.prefix) {\r\n                        PlatformTools.logWarn(message.prefix, message.message)\r\n                    } else {\r\n                        console.warn(\r\n                            PlatformTools.warn(String(message.message)),\r\n                        )\r\n                    }\r\n                    break\r\n\r\n                case \"error\":\r\n                case \"query-error\":\r\n                    if (message.prefix) {\r\n                        PlatformTools.logError(\r\n                            message.prefix,\r\n                            String(message.message),\r\n                        )\r\n                    } else {\r\n                        console.error(\r\n                            PlatformTools.error(String(message.message)),\r\n                        )\r\n                    }\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}