{"version":3,"sources":["../../src/error/UsingJoinColumnOnlyOnOneSideAllowedError.ts"],"names":[],"mappings":";;;AAEA,iDAA6C;AAE7C,MAAa,wCAAyC,SAAQ,2BAAY;IACtE,YAAY,cAA8B,EAAE,QAA0B;QAClE,KAAK,CACD,+EAA+E;YAC3E,QAAQ,cAAc,CAAC,IAAI,IAAI,QAAQ,CAAC,YAAY,QAChD,QAAQ,CAAC,qBAAqB,CAAC,IACnC,IAAI,QAAQ,CAAC,eAAgB,CAAC,YAAY,GAAG;YAC7C,uFAAuF,CAC9F,CAAA;IACL,CAAC;CACJ;AAVD,4FAUC","file":"UsingJoinColumnOnlyOnOneSideAllowedError.js","sourcesContent":["import { EntityMetadata } from \"../metadata/EntityMetadata\"\r\nimport { RelationMetadata } from \"../metadata/RelationMetadata\"\r\nimport { TypeORMError } from \"./TypeORMError\"\r\n\r\nexport class UsingJoinColumnOnlyOnOneSideAllowedError extends TypeORMError {\r\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\r\n        super(\r\n            `Using JoinColumn is allowed only on one side of the one-to-one relationship. ` +\r\n                `Both ${entityMetadata.name}#${relation.propertyName} and ${\r\n                    relation.inverseEntityMetadata.name\r\n                }#${relation.inverseRelation!.propertyName} ` +\r\n                `has JoinTable decorators. Choose one of them and left JoinTable decorator only on it.`,\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":".."}