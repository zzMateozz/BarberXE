{"version":3,"sources":["../../src/error/NamingStrategyNotFoundError.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAE7C;;GAEG;AACH,MAAa,2BAA4B,SAAQ,2BAAY;IACzD,YAAY,YAA+B,EAAE,cAAsB;QAC/D,KAAK,EAAE,CAAA;QAEP,MAAM,IAAI,GACN,OAAO,YAAY,KAAK,UAAU;YAC9B,CAAC,CAAE,YAAoB,CAAC,IAAI;YAC5B,CAAC,CAAC,YAAY,CAAA;QACtB,IAAI,CAAC,OAAO;YACR,oBAAoB,IAAI,4DAA4D;gBACpF,8CAA8C,cAAc,eAAe,CAAA;IACnF,CAAC;CACJ;AAZD,kEAYC","file":"NamingStrategyNotFoundError.js","sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\r\n\r\n/**\r\n * Thrown when consumer tries to use naming strategy that does not exist.\r\n */\r\nexport class NamingStrategyNotFoundError extends TypeORMError {\r\n    constructor(strategyName: string | Function, connectionName: string) {\r\n        super()\r\n\r\n        const name =\r\n            typeof strategyName === \"function\"\r\n                ? (strategyName as any).name\r\n                : strategyName\r\n        this.message =\r\n            `Naming strategy \"${name}\" was not found. Looks like this naming strategy does not ` +\r\n            `exist or it was not registered in current \"${connectionName}\" connection?`\r\n    }\r\n}\r\n"],"sourceRoot":".."}