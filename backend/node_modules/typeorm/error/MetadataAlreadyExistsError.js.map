{"version":3,"sources":["../../src/error/MetadataAlreadyExistsError.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAE7C,MAAa,0BAA2B,SAAQ,2BAAY;IACxD,YACI,YAAoB,EACpB,WAAqB,EACrB,YAAqB;QAErB,KAAK,CACD,YAAY;YACR,qDAAqD;YACrD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAC3B,CAAC,YAAY;gBACT,CAAC,CAAC,eAAe,GAAG,YAAY;gBAChC,CAAC,CAAC,8DAA8D;oBAC9D,iGAAiG,CAAC,CAC/G,CAAA;IACL,CAAC;CACJ;AAhBD,gEAgBC","file":"MetadataAlreadyExistsError.js","sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\r\n\r\nexport class MetadataAlreadyExistsError extends TypeORMError {\r\n    constructor(\r\n        metadataType: string,\r\n        constructor: Function,\r\n        propertyName?: string,\r\n    ) {\r\n        super(\r\n            metadataType +\r\n                \" metadata already exists for the class constructor \" +\r\n                JSON.stringify(constructor) +\r\n                (propertyName\r\n                    ? \" on property \" + propertyName\r\n                    : \". If you previously renamed or moved entity class, make sure\" +\r\n                      \" that compiled version of old entity class source wasn't left in the compiler output directory.\"),\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":".."}