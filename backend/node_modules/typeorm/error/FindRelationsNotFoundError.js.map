{"version":3,"sources":["../../src/error/FindRelationsNotFoundError.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAE7C;;GAEG;AACH,MAAa,0BAA2B,SAAQ,2BAAY;IACxD,YAAY,iBAA2B;QACnC,KAAK,EAAE,CAAA;QAEP,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,aAAa,iBAAiB,CAAC,CAAC,CAAC,kFAAkF,CAAA;QACtI,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,OAAO,GAAG,aAAa,iBAAiB;iBACxC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC;iBAClC,IAAI,CACD,IAAI,CACP,yFAAyF,CAAA;QAClG,CAAC;IACL,CAAC;CACJ;AAdD,gEAcC","file":"FindRelationsNotFoundError.js","sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\r\n\r\n/**\r\n * Thrown when relations specified in the find options were not found in the entities.\r\n */\r\nexport class FindRelationsNotFoundError extends TypeORMError {\r\n    constructor(notFoundRelations: string[]) {\r\n        super()\r\n\r\n        if (notFoundRelations.length === 1) {\r\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`\r\n        } else {\r\n            this.message = `Relations ${notFoundRelations\r\n                .map((relation) => `\"${relation}\"`)\r\n                .join(\r\n                    \", \",\r\n                )} were not found; please check if relations are correct and they exist in your entities.`\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}