{"version":3,"sources":["../../src/error/QueryFailedError.ts"],"names":[],"mappings":";;;AAAA,qDAAiD;AACjD,iDAA6C;AAE7C;;GAEG;AACH,MAAa,gBAA0C,SAAQ,2BAAY;IACvE,YACa,KAAa,EACb,UAA6B,EAC7B,WAAc;QAEvB,KAAK,CACD,WAAW;aACN,QAAQ,EAAE;aACV,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAC/B,CAAA;QAVQ,UAAK,GAAL,KAAK,CAAQ;QACb,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAG;QAUvB,IAAI,WAAW,EAAE,CAAC;YACd,MAAM,EACF,IAAI,EAAE,CAAC,EAAE,sBAAsB;YAC/B,GAAG,eAAe,EACrB,GAAG,WAAW,CAAA;YAEf,yBAAW,CAAC,MAAM,CAAC,IAAI,EAAE;gBACrB,GAAG,eAAe;aACrB,CAAC,CAAA;QACN,CAAC;IACL,CAAC;CACJ;AAzBD,4CAyBC","file":"QueryFailedError.js","sourcesContent":["import { ObjectUtils } from \"../util/ObjectUtils\"\r\nimport { TypeORMError } from \"./TypeORMError\"\r\n\r\n/**\r\n * Thrown when query execution has failed.\r\n */\r\nexport class QueryFailedError<T extends Error = Error> extends TypeORMError {\r\n    constructor(\r\n        readonly query: string,\r\n        readonly parameters: any[] | undefined,\r\n        readonly driverError: T,\r\n    ) {\r\n        super(\r\n            driverError\r\n                .toString()\r\n                .replace(/^error: /, \"\")\r\n                .replace(/^Error: /, \"\")\r\n                .replace(/^Request/, \"\"),\r\n        )\r\n\r\n        if (driverError) {\r\n            const {\r\n                name: _, // eslint-disable-line\r\n                ...otherProperties\r\n            } = driverError\r\n\r\n            ObjectUtils.assign(this, {\r\n                ...otherProperties,\r\n            })\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}