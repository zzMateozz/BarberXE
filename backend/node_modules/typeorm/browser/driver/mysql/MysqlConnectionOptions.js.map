{"version":3,"sources":["../browser/src/driver/mysql/MysqlConnectionOptions.ts"],"names":[],"mappings":"","file":"MysqlConnectionOptions.js","sourcesContent":["import { BaseDataSourceOptions } from \"../../data-source/BaseDataSourceOptions\"\r\nimport { ReplicationMode } from \"../types/ReplicationMode\"\r\nimport { MysqlConnectionCredentialsOptions } from \"./MysqlConnectionCredentialsOptions\"\r\n\r\n/**\r\n * MySQL specific connection options.\r\n *\r\n * @see https://github.com/mysqljs/mysql#connection-options\r\n */\r\nexport interface MysqlConnectionOptions\r\n    extends BaseDataSourceOptions,\r\n        MysqlConnectionCredentialsOptions {\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"mysql\" | \"mariadb\"\r\n\r\n    /**\r\n     * The driver object\r\n     * This defaults to require(\"mysql\").\r\n     * Falls back to require(\"mysql2\")\r\n     */\r\n    readonly driver?: any\r\n\r\n    /**\r\n     * The charset for the connection. This is called \"collation\" in the SQL-level of MySQL (like utf8_general_ci).\r\n     * If a SQL-level charset is specified (like utf8mb4) then the default collation for that charset is used.\r\n     * Default: 'UTF8_GENERAL_CI'\r\n     */\r\n    readonly charset?: string\r\n\r\n    /**\r\n     * The timezone configured on the MySQL server.\r\n     * This is used to type cast server date/time values to JavaScript Date object and vice versa.\r\n     * This can be 'local', 'Z', or an offset in the form +HH:MM or -HH:MM. (Default: 'local')\r\n     */\r\n    readonly timezone?: string\r\n\r\n    /**\r\n     * The milliseconds before a timeout occurs during the initial connection to the MySQL server. (Default: 10000)\r\n     */\r\n    readonly connectTimeout?: number\r\n\r\n    /**\r\n     * The milliseconds before a timeout occurs during the initial connection to the MySQL server. (Default: 10000)\r\n     * This difference between connectTimeout and acquireTimeout is subtle and is described in the mysqljs/mysql docs\r\n     * https://github.com/mysqljs/mysql/tree/master#pool-options\r\n     */\r\n    readonly acquireTimeout?: number\r\n\r\n    /**\r\n     * Allow connecting to MySQL instances that ask for the old (insecure) authentication method. (Default: false)\r\n     */\r\n    readonly insecureAuth?: boolean\r\n\r\n    /**\r\n     * When dealing with big numbers (BIGINT and DECIMAL columns) in the database, you should enable this option (Default: false)\r\n     */\r\n    readonly supportBigNumbers?: boolean\r\n\r\n    /**\r\n     * Enabling both supportBigNumbers and bigNumberStrings forces big numbers (BIGINT and DECIMAL columns) to be always\r\n     * returned as JavaScript String objects (Default: false). Enabling supportBigNumbers but leaving bigNumberStrings\r\n     * disabled will return big numbers as String objects only when they cannot be accurately represented with\r\n     * [JavaScript Number objects](http://ecma262-5.com/ELS5_HTML.htm#Section_8.5) (which happens when they exceed the [-2^53, +2^53] range),\r\n     * otherwise they will be returned as Number objects. This option is ignored if supportBigNumbers is disabled.\r\n     */\r\n    readonly bigNumberStrings?: boolean\r\n\r\n    /**\r\n     * Force date types (TIMESTAMP, DATETIME, DATE) to be returned as strings rather then inflated into JavaScript Date objects.\r\n     * Can be true/false or an array of type names to keep as strings.\r\n     */\r\n    readonly dateStrings?: boolean | string[]\r\n\r\n    /**\r\n     * Prints protocol details to stdout. Can be true/false or an array of packet type names that should be printed.\r\n     * (Default: false)\r\n     */\r\n    readonly debug?: boolean | string[]\r\n\r\n    /**\r\n     * Generates stack traces on Error to include call site of library entrance (\"long stack traces\").\r\n     * Slight performance penalty for most calls. (Default: true)\r\n     */\r\n    readonly trace?: boolean\r\n\r\n    /**\r\n     * Allow multiple mysql statements per query. Be careful with this, it could increase the scope of SQL injection attacks.\r\n     * (Default: false)\r\n     */\r\n    readonly multipleStatements?: boolean\r\n\r\n    /**\r\n     * Use spatial functions like GeomFromText and AsText which are removed in MySQL 8.\r\n     * (Default: true)\r\n     */\r\n    readonly legacySpatialSupport?: boolean\r\n\r\n    /**\r\n     * List of connection flags to use other than the default ones. It is also possible to blacklist default ones.\r\n     * For more information, check https://github.com/mysqljs/mysql#connection-flags.\r\n     */\r\n    readonly flags?: string[]\r\n\r\n    /**\r\n     * TypeORM will automatically use package found in your node_modules, prioritizing mysql over mysql2,\r\n     * but you can specify it manually\r\n     */\r\n    readonly connectorPackage?: \"mysql\" | \"mysql2\"\r\n\r\n    /**\r\n     * Replication setup.\r\n     */\r\n    readonly replication?: {\r\n        /**\r\n         * Master server used by orm to perform writes.\r\n         */\r\n        readonly master: MysqlConnectionCredentialsOptions\r\n\r\n        /**\r\n         * List of read-from servers (slaves).\r\n         */\r\n        readonly slaves: MysqlConnectionCredentialsOptions[]\r\n\r\n        /**\r\n         * If true, PoolCluster will attempt to reconnect when connection fails. (Default: true)\r\n         */\r\n        readonly canRetry?: boolean\r\n\r\n        /**\r\n         * If connection fails, node's errorCount increases.\r\n         * When errorCount is greater than removeNodeErrorCount, remove a node in the PoolCluster. (Default: 5)\r\n         */\r\n        readonly removeNodeErrorCount?: number\r\n\r\n        /**\r\n         * If connection fails, specifies the number of milliseconds before another connection attempt will be made.\r\n         * If set to 0, then node will be removed instead and never re-used. (Default: 0)\r\n         */\r\n        readonly restoreNodeTimeout?: number\r\n\r\n        /**\r\n         * Determines how slaves are selected:\r\n         * RR: Select one alternately (Round-Robin).\r\n         * RANDOM: Select the node by random function.\r\n         * ORDER: Select the first node available unconditionally.\r\n         */\r\n        readonly selector?: \"RR\" | \"RANDOM\" | \"ORDER\"\r\n\r\n        /**\r\n         * Default connection pool to use for SELECT queries\r\n         * @default \"slave\"\r\n         */\r\n        readonly defaultMode?: ReplicationMode\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}