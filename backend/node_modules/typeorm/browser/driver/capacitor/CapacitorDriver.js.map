{"version":3,"sources":["../browser/src/driver/capacitor/CapacitorDriver.ts"],"names":[],"mappings":"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","file":"CapacitorDriver.js","sourcesContent":["import { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\"\r\nimport { CapacitorConnectionOptions } from \"./CapacitorConnectionOptions\"\r\nimport { CapacitorQueryRunner } from \"./CapacitorQueryRunner\"\r\nimport { QueryRunner } from \"../../query-runner/QueryRunner\"\r\nimport { DataSource } from \"../../data-source/DataSource\"\r\nimport { DriverPackageNotInstalledError } from \"../../error\"\r\nimport { ReplicationMode } from \"../types/ReplicationMode\"\r\n\r\nexport class CapacitorDriver extends AbstractSqliteDriver {\r\n    driver: any\r\n    options: CapacitorConnectionOptions\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(connection: DataSource) {\r\n        super(connection)\r\n\r\n        this.database = this.options.database\r\n        this.driver = this.options.driver\r\n\r\n        // load sqlite package\r\n        this.sqlite = this.options.driver\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Performs connection to the database.\r\n     */\r\n    async connect(): Promise<void> {\r\n        this.databaseConnection = this.createDatabaseConnection()\r\n        await this.databaseConnection\r\n    }\r\n\r\n    /**\r\n     * Closes connection with database.\r\n     */\r\n    async disconnect(): Promise<void> {\r\n        this.queryRunner = undefined\r\n        const databaseConnection = await this.databaseConnection\r\n        return databaseConnection.close().then(() => {\r\n            this.databaseConnection = undefined\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Creates a query runner used to execute database queries.\r\n     */\r\n    createQueryRunner(mode: ReplicationMode): QueryRunner {\r\n        if (!this.queryRunner) this.queryRunner = new CapacitorQueryRunner(this)\r\n\r\n        return this.queryRunner\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Protected Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Creates connection with the database.\r\n     */\r\n    protected async createDatabaseConnection() {\r\n        const databaseMode = this.options.mode || \"no-encryption\"\r\n        const isDatabaseEncryted = databaseMode !== \"no-encryption\"\r\n        const databaseVersion =\r\n            typeof this.options.version === \"undefined\"\r\n                ? 1\r\n                : this.options.version\r\n        const connection = await this.sqlite.createConnection(\r\n            this.options.database,\r\n            isDatabaseEncryted,\r\n            databaseMode,\r\n            databaseVersion,\r\n        )\r\n        await connection.open()\r\n\r\n        // we need to enable foreign keys in sqlite to make sure all foreign key related features\r\n        // working properly. this also makes onDelete to work with sqlite.\r\n        await connection.run(`PRAGMA foreign_keys = ON`)\r\n\r\n        if (\r\n            this.options.journalMode &&\r\n            [\"DELETE\", \"TRUNCATE\", \"PERSIST\", \"MEMORY\", \"WAL\", \"OFF\"].indexOf(\r\n                this.options.journalMode,\r\n            ) !== -1\r\n        ) {\r\n            await connection.run(\r\n                `PRAGMA journal_mode = ${this.options.journalMode}`,\r\n            )\r\n        }\r\n\r\n        return connection\r\n    }\r\n\r\n    protected loadDependencies(): void {\r\n        this.sqlite = this.driver\r\n        if (!this.driver) {\r\n            throw new DriverPackageNotInstalledError(\r\n                \"Capacitor\",\r\n                \"@capacitor-community/sqlite\",\r\n            )\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}