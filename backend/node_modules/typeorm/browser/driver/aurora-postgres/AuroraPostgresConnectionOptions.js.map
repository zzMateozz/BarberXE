{"version":3,"sources":["../browser/src/driver/aurora-postgres/AuroraPostgresConnectionOptions.ts"],"names":[],"mappings":"","file":"AuroraPostgresConnectionOptions.js","sourcesContent":["import { BaseDataSourceOptions } from \"../../data-source/BaseDataSourceOptions\"\r\n\r\n/**\r\n * Postgres-specific connection options.\r\n */\r\nexport interface AuroraPostgresConnectionOptions extends BaseDataSourceOptions {\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"aurora-postgres\"\r\n\r\n    readonly region: string\r\n\r\n    readonly secretArn: string\r\n\r\n    readonly resourceArn: string\r\n\r\n    readonly database: string\r\n\r\n    /**\r\n     * The driver object\r\n     * This defaults to require(\"typeorm-aurora-data-api-driver\")\r\n     */\r\n    readonly driver?: any\r\n\r\n    /**\r\n     * The Postgres extension to use to generate UUID columns. Defaults to uuid-ossp.\r\n     * If pgcrypto is selected, TypeORM will use the gen_random_uuid() function from this extension.\r\n     * If uuid-ossp is selected, TypeORM will use the uuid_generate_v4() function from this extension.\r\n     */\r\n    readonly uuidExtension?: \"pgcrypto\" | \"uuid-ossp\"\r\n\r\n    readonly transformParameters?: boolean\r\n\r\n    /*\r\n     * Function handling errors thrown by drivers pool.\r\n     * Defaults to logging error with `warn` level.\r\n     */\r\n    readonly poolErrorHandler?: (err: any) => any\r\n\r\n    readonly serviceConfigOptions?: { [key: string]: any }\r\n\r\n    readonly formatOptions?: { [key: string]: any; castParameters: boolean }\r\n\r\n    readonly poolSize?: never\r\n}\r\n"],"sourceRoot":"../.."}