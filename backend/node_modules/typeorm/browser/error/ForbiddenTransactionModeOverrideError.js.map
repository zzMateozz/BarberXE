{"version":3,"sources":["../browser/src/error/ForbiddenTransactionModeOverrideError.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAE7C;;GAEG;AACH,MAAM,OAAO,qCAAsC,SAAQ,YAAY;IACnE,YAAY,mCAAgD;QACxD,MAAM,cAAc,GAAG,mCAAmC,CAAC,GAAG,CAC1D,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC,IAAI,GAAG,CACvC,CAAA;QAED,KAAK,CACD,cAAc,cAAc,CAAC,IAAI,CAC7B,IAAI,CACP,0EAA0E,CAC9E,CAAA;IACL,CAAC;CACJ","file":"ForbiddenTransactionModeOverrideError.js","sourcesContent":["import { Migration } from \"../migration/Migration\"\r\nimport { TypeORMError } from \"./TypeORMError\"\r\n\r\n/**\r\n * Thrown when the per-migration transaction mode is overriden but the global transaction mode is set to \"all\".\r\n */\r\nexport class ForbiddenTransactionModeOverrideError extends TypeORMError {\r\n    constructor(migrationsOverridingTransactionMode: Migration[]) {\r\n        const migrationNames = migrationsOverridingTransactionMode.map(\r\n            (migration) => `\"${migration.name}\"`,\r\n        )\r\n\r\n        super(\r\n            `Migrations ${migrationNames.join(\r\n                \", \",\r\n            )} override the transaction mode, but the global transaction mode is \"all\"`,\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":".."}