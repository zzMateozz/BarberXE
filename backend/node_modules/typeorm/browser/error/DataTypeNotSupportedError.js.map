{"version":3,"sources":["../browser/src/error/DataTypeNotSupportedError.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAE7C,MAAM,OAAO,yBAA0B,SAAQ,YAAY;IACvD,YACI,MAAsB,EACtB,QAAoB,EACpB,QAAuB;QAEvB,KAAK,EAAE,CAAA;QAEP,MAAM,IAAI,GACN,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAO,QAAS,CAAC,IAAI,CAAA;QAClE,IAAI,CAAC,OAAO,GAAG,cAAc,IAAI,SAAS,MAAM,CAAC,cAAc,CAAC,UAAU,IAAI,MAAM,CAAC,YAAY,0BAA0B,QAAQ,aAAa,CAAA;IACpJ,CAAC;CACJ","file":"DataTypeNotSupportedError.js","sourcesContent":["import { ColumnType } from \"../driver/types/ColumnTypes\"\r\nimport { DatabaseType } from \"../driver/types/DatabaseType\"\r\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\"\r\nimport { TypeORMError } from \"./TypeORMError\"\r\n\r\nexport class DataTypeNotSupportedError extends TypeORMError {\r\n    constructor(\r\n        column: ColumnMetadata,\r\n        dataType: ColumnType,\r\n        database?: DatabaseType,\r\n    ) {\r\n        super()\r\n\r\n        const type =\r\n            typeof dataType === \"string\" ? dataType : (<any>dataType).name\r\n        this.message = `Data type \"${type}\" in \"${column.entityMetadata.targetName}.${column.propertyName}\" is not supported by \"${database}\" database.`\r\n    }\r\n}\r\n"],"sourceRoot":".."}