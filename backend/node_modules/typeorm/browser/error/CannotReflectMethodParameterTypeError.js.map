{"version":3,"sources":["../browser/src/error/CannotReflectMethodParameterTypeError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAE7C;;;GAGG;AACH,MAAM,OAAO,qCAAsC,SAAQ,YAAY;IACnE,YAAY,MAAgB,EAAE,UAAkB;QAC5C,KAAK,CACD,oCAAoC,UAAU,4BAA4B,MAAM,CAAC,IAAI,WAAW;YAC5F,yFAAyF;YACzF,wGAAwG,CAC/G,CAAA;IACL,CAAC;CACJ","file":"CannotReflectMethodParameterTypeError.js","sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\r\n\r\n/**\r\n * Thrown when ORM cannot get method parameter's type.\r\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\r\n */\r\nexport class CannotReflectMethodParameterTypeError extends TypeORMError {\r\n    constructor(target: Function, methodName: string) {\r\n        super(\r\n            `Cannot get reflected type for a \"${methodName}\" method's parameter of \"${target.name}\" class. ` +\r\n                `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` +\r\n                `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`,\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":".."}