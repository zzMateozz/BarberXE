{"version":3,"sources":["../browser/src/schema-builder/options/TableIndexOptions.ts"],"names":[],"mappings":"","file":"TableIndexOptions.js","sourcesContent":["/**\r\n * Database's table index options.\r\n */\r\nexport interface TableIndexOptions {\r\n    // -------------------------------------------------------------------------\r\n    // Public Properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Constraint name.\r\n     */\r\n    name?: string\r\n\r\n    /**\r\n     * Columns included in this index.\r\n     */\r\n    columnNames: string[]\r\n\r\n    /**\r\n     * Indicates if this index is unique.\r\n     */\r\n    isUnique?: boolean\r\n\r\n    /**\r\n     * The SPATIAL modifier indexes the entire column and does not allow indexed columns to contain NULL values.\r\n     * Works only in MySQL.\r\n     */\r\n    isSpatial?: boolean\r\n\r\n    /**\r\n     * Builds the index using the concurrently option.\r\n     * This options is only supported for postgres database.\r\n     */\r\n    isConcurrent?: boolean\r\n\r\n    /**\r\n     * The FULLTEXT modifier indexes the entire column and does not allow prefixing.\r\n     * Supported only in MySQL & SAP HANA.\r\n     */\r\n    isFulltext?: boolean\r\n\r\n    /**\r\n     * NULL_FILTERED indexes are particularly useful for indexing sparse columns, where most rows contain a NULL value.\r\n     * In these cases, the NULL_FILTERED index can be considerably smaller and more efficient to maintain than\r\n     * a normal index that includes NULL values.\r\n     *\r\n     * Works only in Spanner.\r\n     */\r\n    isNullFiltered?: boolean\r\n\r\n    /**\r\n     * Fulltext parser.\r\n     * Works only in MySQL.\r\n     */\r\n    parser?: string\r\n\r\n    /**\r\n     * Index filter condition.\r\n     */\r\n    where?: string\r\n}\r\n"],"sourceRoot":"../.."}