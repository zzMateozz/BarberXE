{"version":3,"sources":["../browser/src/subscriber/event/TransactionCommitEvent.ts"],"names":[],"mappings":"","file":"TransactionCommitEvent.js","sourcesContent":["import { EntityManager } from \"../../entity-manager/EntityManager\"\r\nimport { DataSource } from \"../../data-source/DataSource\"\r\nimport { QueryRunner } from \"../../query-runner/QueryRunner\"\r\n\r\n/**\r\n * TransactionCommitEvent is an object that broadcaster sends to the entity subscriber when an transaction is committed.\r\n */\r\nexport interface TransactionCommitEvent {\r\n    /**\r\n     * Connection used in the event.\r\n     */\r\n    connection: DataSource\r\n\r\n    /**\r\n     * QueryRunner used in the event transaction.\r\n     * All database operations in the subscribed event listener should be performed using this query runner instance.\r\n     */\r\n    queryRunner: QueryRunner\r\n\r\n    /**\r\n     * EntityManager used in the event transaction.\r\n     * All database operations in the subscribed event listener should be performed using this entity manager instance.\r\n     */\r\n    manager: EntityManager\r\n}\r\n"],"sourceRoot":"../.."}