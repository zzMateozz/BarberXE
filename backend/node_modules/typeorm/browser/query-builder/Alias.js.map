{"version":3,"sources":["../browser/src/query-builder/Alias.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAA;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAEvC;GACG;AACH,MAAM,OAAO,KAAK;IAgBd,YAAY,KAAa;QACrB,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,CAAA;IACzC,CAAC;IAID,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;IAC/B,CAAC;IAED,IAAI,WAAW;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAA;IAC3B,CAAC;IAED,IAAI,QAAQ,CAAC,QAAwB;QACjC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;IAC7B,CAAC;IAED,IAAI,QAAQ;QACR,IAAI,CAAC,IAAI,CAAC,SAAS;YACf,MAAM,IAAI,YAAY,CAClB,mDAAmD,IAAI,CAAC,IAAI,GAAG,CAClE,CAAA;QAEL,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;CACJ","file":"Alias.js","sourcesContent":["import { EntityMetadata } from \"../metadata/EntityMetadata\"\r\nimport { ObjectUtils } from \"../util/ObjectUtils\"\r\nimport { TypeORMError } from \"../error\"\r\n\r\n/**\r\n */\r\nexport class Alias {\r\n    type: \"from\" | \"select\" | \"join\" | \"other\" // todo: make something with \"other\"\r\n\r\n    name: string\r\n\r\n    /**\r\n     * Table on which this alias is applied.\r\n     * Used only for aliases which select custom tables.\r\n     */\r\n    tablePath?: string\r\n\r\n    /**\r\n     * If this alias is for sub query.\r\n     */\r\n    subQuery?: string\r\n\r\n    constructor(alias?: Alias) {\r\n        ObjectUtils.assign(this, alias || {})\r\n    }\r\n\r\n    private _metadata?: EntityMetadata\r\n\r\n    get target(): Function | string {\r\n        return this.metadata.target\r\n    }\r\n\r\n    get hasMetadata(): boolean {\r\n        return !!this._metadata\r\n    }\r\n\r\n    set metadata(metadata: EntityMetadata) {\r\n        this._metadata = metadata\r\n    }\r\n\r\n    get metadata(): EntityMetadata {\r\n        if (!this._metadata)\r\n            throw new TypeORMError(\r\n                `Cannot get entity metadata for the given alias \"${this.name}\"`,\r\n            )\r\n\r\n        return this._metadata\r\n    }\r\n}\r\n"],"sourceRoot":".."}