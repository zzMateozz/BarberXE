{"version":3,"sources":["../browser/src/query-builder/QueryBuilderUtils.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,OAAO,iBAAiB;IAC1B;;;OAGG;IACH,MAAM,CAAC,eAAe,CAAC,GAAQ;QAC3B,gEAAgE;QAChE,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;QAEpE,wCAAwC;QACxC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAC,0CAA0C;QAC3F,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY;YAAE,OAAO,KAAK,CAAA;QAE7C,6DAA6D;QAC7D,8CAA8C;QAC9C,+EAA+E;QAC/E,oBAAoB;QACpB,qCAAqC;QACrC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;QAEpE,OAAO,IAAI,CAAA;IACf,CAAC;CACJ","file":"QueryBuilderUtils.js","sourcesContent":["/**\r\n * Helper utility functions for QueryBuilder.\r\n */\r\nexport class QueryBuilderUtils {\r\n    /**\r\n     * Checks if given value is a string representation of alias property,\r\n     * e.g. \"post.category\" or \"post.id\".\r\n     */\r\n    static isAliasProperty(str: any): str is string {\r\n        // alias property must be a string and must have a dot separator\r\n        if (typeof str !== \"string\" || str.indexOf(\".\") === -1) return false\r\n\r\n        // extra alias and its property relation\r\n        const [aliasName, propertyName] = str.split(\".\") // todo: what about relations in embedded?\r\n        if (!aliasName || !propertyName) return false\r\n\r\n        // alias and property must be represented in a special format\r\n        // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\r\n        // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\r\n        //     return false;\r\n        // make sure string is not a subquery\r\n        if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1) return false\r\n\r\n        return true\r\n    }\r\n}\r\n"],"sourceRoot":".."}