{"version":3,"sources":["../browser/src/entity-schema/EntitySchemaOptions.ts"],"names":[],"mappings":"AAgBA;;GAEG;AACH,MAAM,OAAO,mBAAmB;CAgH/B","file":"EntitySchemaOptions.js","sourcesContent":["import {\r\n    DataSource,\r\n    EntitySchemaEmbeddedColumnOptions,\r\n    SelectQueryBuilder,\r\n} from \"..\"\r\nimport { EntitySchemaIndexOptions } from \"./EntitySchemaIndexOptions\"\r\nimport { EntitySchemaColumnOptions } from \"./EntitySchemaColumnOptions\"\r\nimport { EntitySchemaRelationOptions } from \"./EntitySchemaRelationOptions\"\r\nimport { OrderByCondition } from \"../find-options/OrderByCondition\"\r\nimport { TableType } from \"../metadata/types/TableTypes\"\r\nimport { EntitySchemaUniqueOptions } from \"./EntitySchemaUniqueOptions\"\r\nimport { EntitySchemaCheckOptions } from \"./EntitySchemaCheckOptions\"\r\nimport { EntitySchemaExclusionOptions } from \"./EntitySchemaExclusionOptions\"\r\nimport { EntitySchemaInheritanceOptions } from \"./EntitySchemaInheritanceOptions\"\r\nimport { EntitySchemaRelationIdOptions } from \"./EntitySchemaRelationIdOptions\"\r\n\r\n/**\r\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\r\n */\r\nexport class EntitySchemaOptions<T> {\r\n    /**\r\n     * Target bind to this entity schema. Optional.\r\n     */\r\n    target?: Function\r\n\r\n    /**\r\n     * Entity name.\r\n     */\r\n    name: string\r\n\r\n    /**\r\n     * Table name.\r\n     */\r\n    tableName?: string\r\n\r\n    /**\r\n     * Database name. Used in MySql and Sql Server.\r\n     */\r\n    database?: string\r\n\r\n    /**\r\n     * Schema name. Used in Postgres and Sql Server.\r\n     */\r\n    schema?: string\r\n\r\n    /**\r\n     * Table type.\r\n     */\r\n    type?: TableType\r\n\r\n    /**\r\n     * Specifies a property name by which queries will perform ordering by default when fetching rows.\r\n     */\r\n    orderBy?: OrderByCondition\r\n\r\n    /**\r\n     * Entity column's options.\r\n     */\r\n    columns: {\r\n        [P in keyof T]?: EntitySchemaColumnOptions\r\n    }\r\n\r\n    /**\r\n     * Entity relation's options.\r\n     */\r\n    relations?: {\r\n        [P in keyof T]?: EntitySchemaRelationOptions\r\n    }\r\n\r\n    /**\r\n     * Entity relation id options.\r\n     */\r\n    relationIds?: {\r\n        [P in keyof T]?: EntitySchemaRelationIdOptions\r\n    }\r\n\r\n    /**\r\n     * Entity indices options.\r\n     */\r\n    indices?: EntitySchemaIndexOptions[]\r\n\r\n    /**\r\n     * Entity uniques options.\r\n     */\r\n    uniques?: EntitySchemaUniqueOptions[]\r\n\r\n    /**\r\n     * Entity check options.\r\n     */\r\n    checks?: EntitySchemaCheckOptions[]\r\n\r\n    /**\r\n     * Entity exclusion options.\r\n     */\r\n    exclusions?: EntitySchemaExclusionOptions[]\r\n\r\n    /**\r\n     * Embedded Entities options\r\n     */\r\n    embeddeds?: {\r\n        [P in keyof Partial<T>]: EntitySchemaEmbeddedColumnOptions\r\n    }\r\n\r\n    /**\r\n     * Indicates if schema synchronization is enabled or disabled for this entity.\r\n     * If it will be set to false then schema sync will and migrations ignore this entity.\r\n     * By default schema synchronization is enabled for all entities.\r\n     */\r\n    synchronize?: boolean\r\n\r\n    /**\r\n     * If set to 'true' this option disables Sqlite's default behaviour of secretly creating\r\n     * an integer primary key column named 'rowid' on table creation.\r\n     * @see https://www.sqlite.org/withoutrowid.html.\r\n     */\r\n    withoutRowid?: boolean\r\n\r\n    /**\r\n     * View expression.\r\n     */\r\n    expression?: string | ((connection: DataSource) => SelectQueryBuilder<any>)\r\n\r\n    /**\r\n     * Inheritance options.\r\n     */\r\n    inheritance?: EntitySchemaInheritanceOptions\r\n\r\n    /**\r\n     * Custom discriminator value for Single Table Inheritance.\r\n     */\r\n    discriminatorValue?: string\r\n}\r\n"],"sourceRoot":".."}