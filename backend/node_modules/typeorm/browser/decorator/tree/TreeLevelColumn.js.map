{"version":3,"sources":["../browser/src/decorator/tree/TreeLevelColumn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,eAAe,CAAA;AAGtD;;GAEG;AACH,MAAM,UAAU,eAAe;IAC3B,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,sBAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,EAAE;SACQ,CAAC,CAAA;IAC5B,CAAC,CAAA;AACL,CAAC","file":"TreeLevelColumn.js","sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\r\nimport { ColumnMetadataArgs } from \"../../metadata-args/ColumnMetadataArgs\"\r\n\r\n/**\r\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\r\n */\r\nexport function TreeLevelColumn(): PropertyDecorator {\r\n    return function (object: Object, propertyName: string) {\r\n        getMetadataArgsStorage().columns.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"treeLevel\",\r\n            options: {},\r\n        } as ColumnMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}