{"version":3,"sources":["../browser/src/decorator/columns/PrimaryGeneratedColumn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,eAAe,CAAA;AAMtD,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AA2CpD;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CAClC,iBAO2C,EAC3C,YAG2C;IAE3C,uBAAuB;IACvB,MAAM,OAAO,GAAkB,EAAE,CAAA;IACjC,IAAI,QAAqD,CAAA;IACzD,IAAI,iBAAiB,EAAE,CAAC;QACpB,IAAI,OAAO,iBAAiB,KAAK,QAAQ;YACrC,QAAQ,GAAG,iBAIK,CAAA;QAEpB,IAAI,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC1C,QAAQ,GAAG,WAAW,CAAA;YACtB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAA;QAC7C,CAAC;IACL,CAAC;SAAM,CAAC;QACJ,QAAQ,GAAG,WAAW,CAAA;IAC1B,CAAC;IACD,IAAI,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC;QAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAA;IAE5E,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,sFAAsF;QACtF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,QAAQ,KAAK,WAAW,IAAI,QAAQ,KAAK,UAAU,EAAE,CAAC;gBACtD,OAAO,CAAC,IAAI,GAAG,MAAM,CAAA;YACzB,CAAC;iBAAM,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;gBAC7B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAA;YACzB,CAAC;iBAAM,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;gBAC9B,OAAO,CAAC,IAAI,GAAG,KAAK,CAAA;YACxB,CAAC;QACL,CAAC;QAED,2DAA2D;QAC3D,OAAO,CAAC,OAAO,GAAG,IAAI,CAAA;QAEtB,gCAAgC;QAChC,sBAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,OAAO;SACnB,CAAC,CAAA;QAEF,mCAAmC;QACnC,sBAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;SACI,CAAC,CAAA;IAC/B,CAAC,CAAA;AACL,CAAC","file":"PrimaryGeneratedColumn.js","sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\r\nimport { PrimaryGeneratedColumnNumericOptions } from \"../options/PrimaryGeneratedColumnNumericOptions\"\r\nimport { PrimaryGeneratedColumnUUIDOptions } from \"../options/PrimaryGeneratedColumnUUIDOptions\"\r\nimport { GeneratedMetadataArgs } from \"../../metadata-args/GeneratedMetadataArgs\"\r\nimport { ColumnOptions } from \"../options/ColumnOptions\"\r\nimport { PrimaryGeneratedColumnIdentityOptions } from \"../options/PrimaryGeneratedColumnIdentityOptions\"\r\nimport { ObjectUtils } from \"../../util/ObjectUtils\"\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n */\r\nexport function PrimaryGeneratedColumn(): PropertyDecorator\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n */\r\nexport function PrimaryGeneratedColumn(\r\n    options: PrimaryGeneratedColumnNumericOptions,\r\n): PropertyDecorator\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n */\r\nexport function PrimaryGeneratedColumn(\r\n    strategy: \"increment\",\r\n    options?: PrimaryGeneratedColumnNumericOptions,\r\n): PropertyDecorator\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n */\r\nexport function PrimaryGeneratedColumn(\r\n    strategy: \"uuid\",\r\n    options?: PrimaryGeneratedColumnUUIDOptions,\r\n): PropertyDecorator\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n */\r\nexport function PrimaryGeneratedColumn(\r\n    strategy: \"rowid\",\r\n    options?: PrimaryGeneratedColumnUUIDOptions,\r\n): PropertyDecorator\r\n\r\nexport function PrimaryGeneratedColumn(\r\n    strategy: \"identity\",\r\n    options?: PrimaryGeneratedColumnIdentityOptions,\r\n): PropertyDecorator\r\n\r\n/**\r\n * Column decorator is used to mark a specific class property as a table column.\r\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\r\n * This column creates an integer PRIMARY COLUMN with generated set to true.\r\n */\r\nexport function PrimaryGeneratedColumn(\r\n    strategyOrOptions?:\r\n        | \"increment\"\r\n        | \"uuid\"\r\n        | \"rowid\"\r\n        | \"identity\"\r\n        | PrimaryGeneratedColumnNumericOptions\r\n        | PrimaryGeneratedColumnUUIDOptions\r\n        | PrimaryGeneratedColumnIdentityOptions,\r\n    maybeOptions?:\r\n        | PrimaryGeneratedColumnNumericOptions\r\n        | PrimaryGeneratedColumnUUIDOptions\r\n        | PrimaryGeneratedColumnIdentityOptions,\r\n): PropertyDecorator {\r\n    // normalize parameters\r\n    const options: ColumnOptions = {}\r\n    let strategy: \"increment\" | \"uuid\" | \"rowid\" | \"identity\"\r\n    if (strategyOrOptions) {\r\n        if (typeof strategyOrOptions === \"string\")\r\n            strategy = strategyOrOptions as\r\n                | \"increment\"\r\n                | \"uuid\"\r\n                | \"rowid\"\r\n                | \"identity\"\r\n\r\n        if (ObjectUtils.isObject(strategyOrOptions)) {\r\n            strategy = \"increment\"\r\n            Object.assign(options, strategyOrOptions)\r\n        }\r\n    } else {\r\n        strategy = \"increment\"\r\n    }\r\n    if (ObjectUtils.isObject(maybeOptions)) Object.assign(options, maybeOptions)\r\n\r\n    return function (object: Object, propertyName: string) {\r\n        // if column type is not explicitly set then determine it based on generation strategy\r\n        if (!options.type) {\r\n            if (strategy === \"increment\" || strategy === \"identity\") {\r\n                options.type = Number\r\n            } else if (strategy === \"uuid\") {\r\n                options.type = \"uuid\"\r\n            } else if (strategy === \"rowid\") {\r\n                options.type = \"int\"\r\n            }\r\n        }\r\n\r\n        // explicitly set a primary and generated to column options\r\n        options.primary = true\r\n\r\n        // register column metadata args\r\n        getMetadataArgsStorage().columns.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"regular\",\r\n            options: options,\r\n        })\r\n\r\n        // register generated metadata args\r\n        getMetadataArgsStorage().generations.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            strategy: strategy,\r\n        } as GeneratedMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}