{"version":3,"sources":["../browser/src/decorator/Exclusion.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,YAAY,CAAA;AAEnD,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAqBvC;;;;GAIG;AACH,MAAM,UAAU,SAAS,CACrB,gBAAwB,EACxB,eAAwB;IAExB,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAA;IAC3D,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAA;IAEvE,IAAI,CAAC,UAAU;QAAE,MAAM,IAAI,YAAY,CAAC,kCAAkC,CAAC,CAAA;IAE3E,OAAO,UACH,WAA8B,EAC9B,YAA8B;QAE9B,sBAAsB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;YACrC,MAAM,EAAE,YAAY;gBAChB,CAAC,CAAC,WAAW,CAAC,WAAW;gBACzB,CAAC,CAAE,WAAwB;YAC/B,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,UAAU;SACA,CAAC,CAAA;IAC/B,CAAC,CAAA;AACL,CAAC","file":"Exclusion.js","sourcesContent":["import { getMetadataArgsStorage } from \"../globals\"\r\nimport { ExclusionMetadataArgs } from \"../metadata-args/ExclusionMetadataArgs\"\r\nimport { TypeORMError } from \"../error\"\r\n\r\n/**\r\n * Creates a database exclusion.\r\n * Can be used on entity.\r\n * Can create exclusions with composite columns when used on entity.\r\n */\r\nexport function Exclusion(\r\n    expression: string,\r\n): ClassDecorator & PropertyDecorator\r\n\r\n/**\r\n * Creates a database exclusion.\r\n * Can be used on entity.\r\n * Can create exclusions with composite columns when used on entity.\r\n */\r\nexport function Exclusion(\r\n    name: string,\r\n    expression: string,\r\n): ClassDecorator & PropertyDecorator\r\n\r\n/**\r\n * Creates a database exclusion.\r\n * Can be used on entity.\r\n * Can create exclusions with composite columns when used on entity.\r\n */\r\nexport function Exclusion(\r\n    nameOrExpression: string,\r\n    maybeExpression?: string,\r\n): ClassDecorator & PropertyDecorator {\r\n    const name = maybeExpression ? nameOrExpression : undefined\r\n    const expression = maybeExpression ? maybeExpression : nameOrExpression\r\n\r\n    if (!expression) throw new TypeORMError(`Exclusion expression is required`)\r\n\r\n    return function (\r\n        clsOrObject: Function | Object,\r\n        propertyName?: string | symbol,\r\n    ) {\r\n        getMetadataArgsStorage().exclusions.push({\r\n            target: propertyName\r\n                ? clsOrObject.constructor\r\n                : (clsOrObject as Function),\r\n            name: name,\r\n            expression: expression,\r\n        } as ExclusionMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":".."}