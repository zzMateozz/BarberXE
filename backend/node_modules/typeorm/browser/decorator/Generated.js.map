{"version":3,"sources":["../browser/src/decorator/Generated.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,YAAY,CAAA;AAGnD;;;;;;;;GAQG;AACH,MAAM,UAAU,SAAS,CACrB,WAA2C,WAAW;IAEtD,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,sBAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;SACI,CAAC,CAAA;IAC/B,CAAC,CAAA;AACL,CAAC","file":"Generated.js","sourcesContent":["import { getMetadataArgsStorage } from \"../globals\"\r\nimport { GeneratedMetadataArgs } from \"../metadata-args/GeneratedMetadataArgs\"\r\n\r\n/**\r\n * Marks a column to generate a value on entity insertion.\r\n * There are three types of generation strategy - increment, uuid and rowid (cockroachdb only).\r\n * Increment uses a number which increases by one on each insertion.\r\n * Uuid generates a special UUID token.\r\n * Rowid supports only in CockroachDB and uses `unique_rowid()` function\r\n *\r\n * Note, some databases do not support non-primary generation columns.\r\n */\r\nexport function Generated(\r\n    strategy: \"increment\" | \"uuid\" | \"rowid\" = \"increment\",\r\n): PropertyDecorator {\r\n    return function (object: Object, propertyName: string) {\r\n        getMetadataArgsStorage().generations.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            strategy: strategy,\r\n        } as GeneratedMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":".."}