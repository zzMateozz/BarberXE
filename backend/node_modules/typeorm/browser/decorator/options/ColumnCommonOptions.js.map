{"version":3,"sources":["../browser/src/decorator/options/ColumnCommonOptions.ts"],"names":[],"mappings":"","file":"ColumnCommonOptions.js","sourcesContent":["import { ValueTransformer } from \"./ValueTransformer\"\r\n\r\n/**\r\n * Column options specific to all column types.\r\n */\r\nexport interface ColumnCommonOptions {\r\n    /**\r\n     * Indicates if column is always selected by QueryBuilder and find operations.\r\n     * Default value is \"true\".\r\n     */\r\n    select?: boolean\r\n\r\n    /**\r\n     * Column name in the database.\r\n     */\r\n    name?: string\r\n\r\n    /**\r\n     * Indicates if this column is a primary key.\r\n     * Same can be achieved when @PrimaryColumn decorator is used.\r\n     */\r\n    primary?: boolean\r\n\r\n    /**\r\n     * Specifies if this column will use auto increment (sequence, generated identity, rowid).\r\n     * Note that in some databases only one column in entity can be marked as generated, and it must be a primary column.\r\n     */\r\n    generated?: boolean | \"increment\" | \"uuid\" | \"rowid\" | \"identity\"\r\n\r\n    /**\r\n     * Specifies if column's value must be unique or not.\r\n     */\r\n    unique?: boolean\r\n\r\n    /**\r\n     * Indicates if column's value can be set to NULL.\r\n     */\r\n    nullable?: boolean\r\n\r\n    /**\r\n     * Default database value.\r\n     * Note that default value is not supported when column type is 'json' of mysql.\r\n     */\r\n    default?: any\r\n\r\n    /**\r\n     * ON UPDATE trigger. Works only for MySQL.\r\n     */\r\n    onUpdate?: string\r\n\r\n    /**\r\n     * Column comment. Not supported by all database types.\r\n     */\r\n    comment?: string\r\n\r\n    /**\r\n     * Indicates if this column is an array.\r\n     * Can be simply set to true or array length can be specified.\r\n     * Supported only by postgres.\r\n     */\r\n    array?: boolean\r\n\r\n    /**\r\n     * Specifies a value transformer that is to be used to (un)marshal\r\n     * this column when reading or writing to the database.\r\n     */\r\n    transformer?: ValueTransformer | ValueTransformer[]\r\n}\r\n"],"sourceRoot":"../.."}