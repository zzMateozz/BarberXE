{"version":3,"sources":["../browser/src/logger/LoggerFactory.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAA;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAA;AAC/D,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAA;AAEjD;;GAEG;AACH,MAAM,OAAO,aAAa;IACtB;;OAEG;IACH,MAAM,CACF,MAKY,EACZ,OAAuB;QAEvB,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,MAAgB,CAAA;QAEzD,IAAI,MAAM,EAAE,CAAC;YACT,QAAQ,MAAM,EAAE,CAAC;gBACb,KAAK,gBAAgB;oBACjB,OAAO,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAA;gBAE3C,KAAK,MAAM;oBACP,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAA;gBAElC,KAAK,kBAAkB;oBACnB,OAAO,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAA;gBAE7C,KAAK,OAAO;oBACR,OAAO,IAAI,WAAW,EAAE,CAAA;YAChC,CAAC;QACL,CAAC;QAED,OAAO,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAA;IAC7C,CAAC;CACJ","file":"LoggerFactory.js","sourcesContent":["import { Logger } from \"./Logger\"\r\nimport { LoggerOptions } from \"./LoggerOptions\"\r\nimport { SimpleConsoleLogger } from \"./SimpleConsoleLogger\"\r\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\"\r\nimport { FileLogger } from \"./FileLogger\"\r\nimport { DebugLogger } from \"./DebugLogger\"\r\nimport { ObjectUtils } from \"../util/ObjectUtils\"\r\n\r\n/**\r\n * Helps to create logger instances.\r\n */\r\nexport class LoggerFactory {\r\n    /**\r\n     * Creates a new logger depend on a given connection's driver.\r\n     */\r\n    create(\r\n        logger?:\r\n            | \"advanced-console\"\r\n            | \"simple-console\"\r\n            | \"file\"\r\n            | \"debug\"\r\n            | Logger,\r\n        options?: LoggerOptions,\r\n    ): Logger {\r\n        if (ObjectUtils.isObject(logger)) return logger as Logger\r\n\r\n        if (logger) {\r\n            switch (logger) {\r\n                case \"simple-console\":\r\n                    return new SimpleConsoleLogger(options)\r\n\r\n                case \"file\":\r\n                    return new FileLogger(options)\r\n\r\n                case \"advanced-console\":\r\n                    return new AdvancedConsoleLogger(options)\r\n\r\n                case \"debug\":\r\n                    return new DebugLogger()\r\n            }\r\n        }\r\n\r\n        return new AdvancedConsoleLogger(options)\r\n    }\r\n}\r\n"],"sourceRoot":".."}