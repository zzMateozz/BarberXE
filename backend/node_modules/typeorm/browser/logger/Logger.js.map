{"version":3,"sources":["../browser/src/logger/Logger.ts"],"names":[],"mappings":"","file":"Logger.js","sourcesContent":["import { QueryRunner } from \"../query-runner/QueryRunner\"\r\n\r\n/**\r\n * Performs logging of the events in TypeORM.\r\n */\r\nexport interface Logger {\r\n    /**\r\n     * Logs query and parameters used in it.\r\n     */\r\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner): any\r\n\r\n    /**\r\n     * Logs query that is failed.\r\n     */\r\n    logQueryError(\r\n        error: string | Error,\r\n        query: string,\r\n        parameters?: any[],\r\n        queryRunner?: QueryRunner,\r\n    ): any\r\n\r\n    /**\r\n     * Logs query that is slow.\r\n     */\r\n    logQuerySlow(\r\n        time: number,\r\n        query: string,\r\n        parameters?: any[],\r\n        queryRunner?: QueryRunner,\r\n    ): any\r\n\r\n    /**\r\n     * Logs events from the schema build process.\r\n     */\r\n    logSchemaBuild(message: string, queryRunner?: QueryRunner): any\r\n\r\n    /**\r\n     * Logs events from the migrations run process.\r\n     */\r\n    logMigration(message: string, queryRunner?: QueryRunner): any\r\n\r\n    /**\r\n     * Perform logging using given logger, or by default to the console.\r\n     * Log has its own level and message.\r\n     */\r\n    log(\r\n        level: \"log\" | \"info\" | \"warn\",\r\n        message: any,\r\n        queryRunner?: QueryRunner,\r\n    ): any\r\n}\r\n\r\n/**\r\n * Log level.\r\n */\r\nexport type LogLevel =\r\n    | \"query\"\r\n    | \"schema\"\r\n    | \"error\"\r\n    | \"warn\"\r\n    | \"info\"\r\n    | \"log\"\r\n    | \"migration\"\r\n\r\n/**\r\n * Log message.\r\n */\r\nexport type LogMessage = {\r\n    type?: LogMessageType\r\n    prefix?: string\r\n    message: string | number\r\n    format?: LogMessageFormat\r\n    parameters?: any[]\r\n    additionalInfo?: Record<string, any>\r\n}\r\n\r\n/**\r\n * Log message format.\r\n */\r\nexport type LogMessageFormat = \"sql\"\r\n\r\n/**\r\n * Log message type.\r\n */\r\nexport type LogMessageType =\r\n    | \"log\"\r\n    | \"info\"\r\n    | \"warn\"\r\n    | \"error\"\r\n    | \"query\"\r\n    | \"query-error\"\r\n    | \"query-slow\"\r\n    | \"schema-build\"\r\n    | \"migration\"\r\n\r\n/**\r\n * Options for prepare log messages\r\n */\r\nexport type PrepareLogMessagesOptions = {\r\n    highlightSql: boolean\r\n    appendParameterAsComment: boolean\r\n    addColonToPrefix: boolean\r\n}\r\n"],"sourceRoot":".."}