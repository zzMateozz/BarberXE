{"version":3,"sources":["../../src/metadata-args/RelationMetadataArgs.ts"],"names":[],"mappings":"","file":"RelationMetadataArgs.js","sourcesContent":["import { RelationType } from \"../metadata/types/RelationTypes\"\r\nimport { RelationOptions } from \"../decorator/options/RelationOptions\"\r\nimport { PropertyTypeFactory } from \"../metadata/types/PropertyTypeInFunction\"\r\nimport { RelationTypeInFunction } from \"../metadata/types/RelationTypeInFunction\"\r\n\r\n/**\r\n * Arguments for RelationMetadata class.\r\n */\r\nexport interface RelationMetadataArgs {\r\n    /**\r\n     * Class to which this relation is applied.\r\n     */\r\n    readonly target: Function | string\r\n\r\n    /**\r\n     * In the case if this relation is without a target, targetId must be specified.\r\n     * This is used for entity schemas without classes.\r\n     */\r\n    // readonly targetId?: string;\r\n\r\n    /**\r\n     * Class's property name to which this relation is applied.\r\n     */\r\n    readonly propertyName: string\r\n\r\n    /**\r\n     * Indicates if this relation will be lazily loaded.\r\n     */\r\n    readonly isLazy: boolean\r\n\r\n    /**\r\n     * Original (reflected) class's property type.\r\n     *\r\n     * todo: this can be empty for relations from entity schemas.\r\n     */\r\n    // readonly propertyType?: any;\r\n\r\n    /**\r\n     * Type of relation. Can be one of the value of the RelationTypes class.\r\n     */\r\n    readonly relationType: RelationType\r\n\r\n    /**\r\n     * Type of the relation. This type is in function because of language specifics and problems with recursive\r\n     * referenced classes.\r\n     */\r\n    readonly type: RelationTypeInFunction\r\n\r\n    /**\r\n     * Inverse side of the relation.\r\n     */\r\n    readonly inverseSideProperty?: PropertyTypeFactory<any>\r\n\r\n    /**\r\n     * Additional relation options.\r\n     */\r\n    readonly options: RelationOptions\r\n\r\n    /**\r\n     * Indicates if this is a parent (can be only many-to-one relation) relation in the tree tables.\r\n     */\r\n    readonly isTreeParent?: boolean\r\n\r\n    /**\r\n     * Indicates if this is a children (can be only one-to-many relation) relation in the tree tables.\r\n     */\r\n    readonly isTreeChildren?: boolean\r\n}\r\n"],"sourceRoot":".."}