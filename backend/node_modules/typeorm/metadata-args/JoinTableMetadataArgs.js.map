{"version":3,"sources":["../../src/metadata-args/JoinTableMetadataArgs.ts"],"names":[],"mappings":"","file":"JoinTableMetadataArgs.js","sourcesContent":["import { JoinColumnMetadataArgs } from \"./JoinColumnMetadataArgs\"\r\n\r\n/**\r\n * Arguments for JoinTableMetadata class.\r\n */\r\nexport interface JoinTableMetadataArgs {\r\n    /**\r\n     * Class to which this column is applied.\r\n     */\r\n    readonly target: Function | string\r\n\r\n    /**\r\n     * Class's property name to which this column is applied.\r\n     */\r\n    readonly propertyName: string\r\n\r\n    /**\r\n     * Name of the table that will be created to store values of the both tables (join table).\r\n     * By default is auto generated.\r\n     */\r\n    readonly name?: string\r\n\r\n    /**\r\n     * First column of the join table.\r\n     */\r\n    readonly joinColumns?: JoinColumnMetadataArgs[]\r\n\r\n    /**\r\n     * Second (inverse) column of the join table.\r\n     */\r\n    readonly inverseJoinColumns?: JoinColumnMetadataArgs[]\r\n\r\n    /**\r\n     * Database where join table will be created.\r\n     * Works only in some databases (like mysql and mssql).\r\n     */\r\n    readonly database?: string\r\n\r\n    /**\r\n     * Schema where join table will be created.\r\n     * Works only in some databases (like postgres and mssql).\r\n     */\r\n    readonly schema?: string\r\n\r\n    /**\r\n     * Indicates if schema synchronization is enabled or disabled junction table.\r\n     * If it will be set to false then schema sync will and migrations ignores junction table.\r\n     * By default schema synchronization is enabled.\r\n     */\r\n    readonly synchronize?: boolean\r\n}\r\n"],"sourceRoot":".."}