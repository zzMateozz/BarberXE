{"version":3,"sources":["../../src/decorator/listeners/AfterSoftRemove.ts"],"names":[],"mappings":";;AAOA,0CAQC;AAfD,2CAAsD;AACtD,gFAA4E;AAG5E;;GAEG;AACH,SAAgB,eAAe;IAC3B,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,IAAA,gCAAsB,GAAE,CAAC,eAAe,CAAC,IAAI,CAAC;YAC1C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,uCAAkB,CAAC,iBAAiB;SACf,CAAC,CAAA;IACpC,CAAC,CAAA;AACL,CAAC","file":"AfterSoftRemove.js","sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\r\nimport { EventListenerTypes } from \"../../metadata/types/EventListenerTypes\"\r\nimport { EntityListenerMetadataArgs } from \"../../metadata-args/EntityListenerMetadataArgs\"\r\n\r\n/**\r\n * Calls a method on which this decorator is applied before this entity soft removal.\r\n */\r\nexport function AfterSoftRemove(): PropertyDecorator {\r\n    return function (object: Object, propertyName: string) {\r\n        getMetadataArgsStorage().entityListeners.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            type: EventListenerTypes.AFTER_SOFT_REMOVE,\r\n        } as EntityListenerMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}