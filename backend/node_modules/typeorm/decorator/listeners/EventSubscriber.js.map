{"version":3,"sources":["../../src/decorator/listeners/EventSubscriber.ts"],"names":[],"mappings":";;AAOA,0CAMC;AAbD,2CAAsD;AAGtD;;;GAGG;AACH,SAAgB,eAAe;IAC3B,OAAO,UAAU,MAAgB;QAC7B,IAAA,gCAAsB,GAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAC5C,MAAM,EAAE,MAAM;SACe,CAAC,CAAA;IACtC,CAAC,CAAA;AACL,CAAC","file":"EventSubscriber.js","sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\r\nimport { EntitySubscriberMetadataArgs } from \"../../metadata-args/EntitySubscriberMetadataArgs\"\r\n\r\n/**\r\n * Classes decorated with this decorator will listen to ORM events and their methods will be triggered when event\r\n * occurs. Those classes must implement EventSubscriberInterface interface.\r\n */\r\nexport function EventSubscriber(): ClassDecorator {\r\n    return function (target: Function) {\r\n        getMetadataArgsStorage().entitySubscribers.push({\r\n            target: target,\r\n        } as EntitySubscriberMetadataArgs)\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}