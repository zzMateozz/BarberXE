{"version":3,"sources":["../../src/driver/cockroachdb/CockroachConnectionOptions.ts"],"names":[],"mappings":"","file":"CockroachConnectionOptions.js","sourcesContent":["import { BaseDataSourceOptions } from \"../../data-source/BaseDataSourceOptions\"\r\nimport { ReplicationMode } from \"../types/ReplicationMode\"\r\nimport { CockroachConnectionCredentialsOptions } from \"./CockroachConnectionCredentialsOptions\"\r\n\r\n/**\r\n * Cockroachdb-specific connection options.\r\n */\r\nexport interface CockroachConnectionOptions\r\n    extends BaseDataSourceOptions,\r\n        CockroachConnectionCredentialsOptions {\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"cockroachdb\"\r\n\r\n    /**\r\n     * Enable time travel queries on cockroachdb.\r\n     * https://www.cockroachlabs.com/docs/stable/as-of-system-time.html\r\n     */\r\n    readonly timeTravelQueries: boolean\r\n\r\n    /**\r\n     * Schema name.\r\n     */\r\n    readonly schema?: string\r\n\r\n    /**\r\n     * The driver object\r\n     * This defaults to `require(\"pg\")`.\r\n     */\r\n    readonly driver?: any\r\n\r\n    /**\r\n     * The driver object\r\n     * This defaults to `require(\"pg-native\")`.\r\n     */\r\n    readonly nativeDriver?: any\r\n\r\n    /**\r\n     * Replication setup.\r\n     */\r\n    readonly replication?: {\r\n        /**\r\n         * Master server used by orm to perform writes.\r\n         */\r\n        readonly master: CockroachConnectionCredentialsOptions\r\n\r\n        /**\r\n         * List of read-from servers (slaves).\r\n         */\r\n        readonly slaves: CockroachConnectionCredentialsOptions[]\r\n\r\n        /**\r\n         * Default connection pool to use for SELECT queries\r\n         * @default \"slave\"\r\n         */\r\n        readonly defaultMode?: ReplicationMode\r\n    }\r\n\r\n    /**\r\n     * sets the application_name var to help db administrators identify\r\n     * the service using this connection. Defaults to 'undefined'\r\n     */\r\n    readonly applicationName?: string\r\n\r\n    /**\r\n     * Function handling errors thrown by drivers pool.\r\n     * Defaults to logging error with `warn` level.\r\n     */\r\n    readonly poolErrorHandler?: (err: any) => any\r\n\r\n    /**\r\n     * Max number of transaction retries in case of 40001 error.\r\n     */\r\n    readonly maxTransactionRetries?: number\r\n}\r\n"],"sourceRoot":"../.."}