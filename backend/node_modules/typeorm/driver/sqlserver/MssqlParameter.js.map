{"version":3,"sources":["../../src/driver/sqlserver/MssqlParameter.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,MAAa,cAAc;IA8CvB,YAAmB,KAAU,EAAS,IAAY,EAAE,GAAG,MAAgB;QAApD,UAAK,GAAL,KAAK,CAAK;QAAS,SAAI,GAAJ,IAAI,CAAQ;QA7CzC,mBAAa,GAAG,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;QAErD,4EAA4E;QAC5E,oBAAoB;QACpB,4EAA4E;QAErE,WAAM,GAAU,EAAE,CAAA;QAwCrB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAA;IAC9B,CAAC;CACJ;AAjDD,wCAiDC","file":"MssqlParameter.js","sourcesContent":["/**\r\n * Sql server driver requires parameter types to be specified fo input parameters used in the query.\r\n *\r\n * @see https://github.com/patriksimek/node-mssql#data-types\r\n */\r\nexport class MssqlParameter {\r\n    readonly \"@instanceof\" = Symbol.for(\"MssqlParameter\")\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    public params: any[] = []\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(value: any, type: \"bit\")\r\n    constructor(value: any, type: \"bigint\")\r\n    constructor(value: any, type: \"decimal\", precision?: number, scale?: number)\r\n    constructor(value: any, type: \"float\")\r\n    constructor(value: any, type: \"int\")\r\n    constructor(value: any, type: \"money\")\r\n    constructor(value: any, type: \"numeric\", precision?: number, scale?: number)\r\n    constructor(value: any, type: \"smallint\")\r\n    constructor(value: any, type: \"smallmoney\")\r\n    constructor(value: any, type: \"real\")\r\n    constructor(value: any, type: \"tinyint\")\r\n    constructor(value: any, type: \"char\", length?: number)\r\n    constructor(value: any, type: \"nchar\", length?: number)\r\n    constructor(value: any, type: \"text\")\r\n    constructor(value: any, type: \"ntext\")\r\n    constructor(value: any, type: \"varchar\", length?: number)\r\n    constructor(value: any, type: \"nvarchar\", length?: number)\r\n    constructor(value: any, type: \"xml\")\r\n    constructor(value: any, type: \"time\", scale?: number)\r\n    constructor(value: any, type: \"date\")\r\n    constructor(value: any, type: \"datetime\")\r\n    constructor(value: any, type: \"datetime2\", scale?: number)\r\n    constructor(value: any, type: \"datetimeoffset\", scale?: number)\r\n    constructor(value: any, type: \"smalldatetime\")\r\n    constructor(value: any, type: \"uniqueidentifier\")\r\n    constructor(value: any, type: \"variant\")\r\n    constructor(value: any, type: \"binary\")\r\n    constructor(value: any, type: \"varbinary\", length?: number)\r\n    constructor(value: any, type: \"image\")\r\n    constructor(value: any, type: \"udt\")\r\n    constructor(value: any, type: \"geography\")\r\n    constructor(value: any, type: \"geometry\")\r\n    constructor(value: any, type: \"rowversion\")\r\n    constructor(public value: any, public type: string, ...params: number[]) {\r\n        this.params = params || []\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}