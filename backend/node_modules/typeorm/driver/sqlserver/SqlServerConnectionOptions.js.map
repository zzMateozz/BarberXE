{"version":3,"sources":["../../src/driver/sqlserver/SqlServerConnectionOptions.ts"],"names":[],"mappings":"","file":"SqlServerConnectionOptions.js","sourcesContent":["import { BaseDataSourceOptions } from \"../../data-source/BaseDataSourceOptions\"\r\nimport { ReplicationMode } from \"../types/ReplicationMode\"\r\nimport { SqlServerConnectionCredentialsOptions } from \"./SqlServerConnectionCredentialsOptions\"\r\n\r\n/**\r\n * Microsoft Sql Server specific connection options.\r\n */\r\nexport interface SqlServerConnectionOptions\r\n    extends BaseDataSourceOptions,\r\n        SqlServerConnectionCredentialsOptions {\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"mssql\"\r\n\r\n    /**\r\n     * Connection timeout in ms (default: 15000).\r\n     */\r\n    readonly connectionTimeout?: number\r\n\r\n    /**\r\n     * Request timeout in ms (default: 15000). NOTE: msnodesqlv8 driver doesn't support timeouts < 1 second.\r\n     */\r\n    readonly requestTimeout?: number\r\n\r\n    /**\r\n     * Stream recordsets/rows instead of returning them all at once as an argument of callback (default: false).\r\n     * You can also enable streaming for each request independently (request.stream = true).\r\n     * Always set to true if you plan to work with large amount of rows.\r\n     */\r\n    readonly stream?: boolean\r\n\r\n    /**\r\n     * Database schema.\r\n     */\r\n    readonly schema?: string\r\n\r\n    /**\r\n     * The driver object\r\n     * This defaults to `require(\"mssql\")`\r\n     */\r\n    readonly driver?: any\r\n\r\n    /**\r\n     * An optional object/dictionary with the any of the properties\r\n     */\r\n    readonly pool?: {\r\n        /**\r\n         * Maximum number of resources to create at any given time. (default=1)\r\n         */\r\n        readonly max?: number\r\n\r\n        /**\r\n         * Minimum number of resources to keep in pool at any given time. If this is set >= max, the pool will silently\r\n         * set the min to equal max. (default=0)\r\n         */\r\n        readonly min?: number\r\n\r\n        /**\r\n         * Maximum number of queued requests allowed, additional acquire calls will be callback with an err in a future\r\n         * cycle of the event loop.\r\n         */\r\n        readonly maxWaitingClients?: number\r\n\r\n        /**\r\n         * Max milliseconds an acquire call will wait for a resource before timing out. (default no limit), if supplied should non-zero positive integer.\r\n         */\r\n        readonly acquireTimeoutMillis?: number\r\n\r\n        /**\r\n         * If true the oldest resources will be first to be allocated. If false the most recently released resources will\r\n         * be the first to be allocated. This in effect turns the pool's behaviour from a queue into a stack. boolean,\r\n         * (default true)\r\n         */\r\n        readonly fifo?: boolean\r\n\r\n        /**\r\n         * Int between 1 and x - if set, borrowers can specify their relative priority in the queue if no resources\r\n         * are available. see example. (default 1)\r\n         */\r\n        readonly priorityRange?: number\r\n\r\n        /**\r\n         * How often to run eviction checks. Default: 0 (does not run).\r\n         */\r\n        readonly evictionRunIntervalMillis?: number\r\n\r\n        /**\r\n         * Number of resources to check each eviction run. Default: 3.\r\n         */\r\n        readonly numTestsPerRun?: number\r\n\r\n        /**\r\n         * Amount of time an object may sit idle in the pool before it is eligible for eviction by the idle object\r\n         * evictor (if any), with the extra condition that at least \"min idle\" object instances remain in the pool.\r\n         * Default -1 (nothing can get evicted)\r\n         */\r\n        readonly softIdleTimeoutMillis?: number\r\n\r\n        /**\r\n         * The minimum amount of time that an object may sit idle in the pool before it is eligible for eviction due\r\n         * to idle time. Supercedes softIdleTimeoutMillis Default: 30000\r\n         */\r\n        readonly idleTimeoutMillis?: number\r\n\r\n        /*\r\n         * Function handling errors thrown by drivers pool.\r\n         * Defaults to logging error with `warn` level.\r\n         */\r\n        readonly errorHandler?: (err: any) => any\r\n    }\r\n\r\n    /**\r\n     * Extra options\r\n     */\r\n    readonly options?: {\r\n        /**\r\n         * The named instance to connect to\r\n         */\r\n        readonly instanceName?: string\r\n\r\n        /**\r\n         * By default, if the database requestion by options.database cannot be accessed, the connection will fail with\r\n         * an error. However, if options.fallbackToDefaultDb is set to true, then the user's default database will\r\n         * be used instead (Default: false).\r\n         */\r\n        readonly fallbackToDefaultDb?: boolean\r\n\r\n        /**\r\n         * If true, SET ANSI_NULL_DFLT_ON ON will be set in the initial sql. This means new columns will be nullable by\r\n         * default. See the T-SQL documentation for more details. (Default: true).\r\n         */\r\n        readonly enableAnsiNullDefault?: boolean\r\n\r\n        /**\r\n         * The number of milliseconds before the attempt to connect is considered failed (default: 15000).\r\n         */\r\n        readonly connectTimeout?: number\r\n\r\n        /**\r\n         * The number of milliseconds before the cancel (abort) of a request is considered failed (default: 5000).\r\n         */\r\n        readonly cancelTimeout?: number\r\n\r\n        /**\r\n         * The size of TDS packets (subject to negotiation with the server). Should be a power of 2. (default: 4096).\r\n         */\r\n        readonly packetSize?: number\r\n\r\n        /**\r\n         * A boolean determining whether to pass time values in UTC or local time. (default: false).\r\n         */\r\n        readonly useUTC?: boolean\r\n\r\n        /**\r\n         * A boolean determining whether to rollback a transaction automatically if any error is encountered during\r\n         * the given transaction's execution. This sets the value for SET XACT_ABORT during the initial SQL phase\r\n         * of a connection (documentation).\r\n         */\r\n        readonly abortTransactionOnError?: boolean\r\n\r\n        /**\r\n         * A string indicating which network interface (ip address) to use when connecting to SQL Server.\r\n         */\r\n        readonly localAddress?: string\r\n\r\n        /**\r\n         * A boolean determining whether to return rows as arrays or key-value collections. (default: false).\r\n         */\r\n        readonly useColumnNames?: boolean\r\n\r\n        /**\r\n         * A boolean, controlling whether the column names returned will have the first letter converted to lower case\r\n         * (true) or not. This value is ignored if you provide a columnNameReplacer. (default: false).\r\n         */\r\n        readonly camelCaseColumns?: boolean\r\n\r\n        /**\r\n         * A boolean, controlling whatever to disable RETURNING / OUTPUT statements.\r\n         */\r\n        readonly disableOutputReturning?: boolean\r\n\r\n        /**\r\n         * A boolean, controlling whether MssqlParameter types char, varchar, and text are converted to their unicode equivalents, nchar, nvarchar, and ntext.\r\n         * (default: false, meaning that char/varchar/text parameters will be converted to nchar/nvarchar/ntext)\r\n         */\r\n        readonly disableAsciiToUnicodeParamConversion?: boolean\r\n\r\n        /**\r\n         * Debug options\r\n         */\r\n        readonly debug?: {\r\n            /**\r\n             * A boolean, controlling whether debug events will be emitted with text describing packet details\r\n             * (default: false).\r\n             */\r\n            readonly packet?: boolean\r\n\r\n            /**\r\n             * A boolean, controlling whether debug events will be emitted with text describing packet data details\r\n             * (default: false).\r\n             */\r\n            readonly data?: boolean\r\n\r\n            /**\r\n             * A boolean, controlling whether debug events will be emitted with text describing packet payload details\r\n             * (default: false).\r\n             */\r\n            readonly payload?: boolean\r\n\r\n            /**\r\n             * A boolean, controlling whether debug events will be emitted with text describing token stream tokens\r\n             * (default: false).\r\n             */\r\n            readonly token?: boolean\r\n        }\r\n\r\n        /**\r\n         * The default isolation level that transactions will be run with. The isolation levels are available\r\n         * from require('tedious').ISOLATION_LEVEL. (default: READ_COMMITTED).\r\n         */\r\n        readonly isolation?:\r\n            | \"READ_UNCOMMITTED\"\r\n            | \"READ_COMMITTED\"\r\n            | \"REPEATABLE_READ\"\r\n            | \"SERIALIZABLE\"\r\n            | \"SNAPSHOT\"\r\n\r\n        /**\r\n         * The default isolation level for new connections. All out-of-transaction queries are executed with this\r\n         * setting. The isolation levels are available from require('tedious').ISOLATION_LEVEL .\r\n         */\r\n        readonly connectionIsolationLevel?:\r\n            | \"READ_UNCOMMITTED\"\r\n            | \"READ_COMMITTED\"\r\n            | \"REPEATABLE_READ\"\r\n            | \"SERIALIZABLE\"\r\n            | \"SNAPSHOT\"\r\n\r\n        /**\r\n         * A boolean, determining whether the connection will request read only access from a SQL Server\r\n         * Availability Group. For more information, see here. (default: false).\r\n         */\r\n        readonly readOnlyIntent?: boolean\r\n\r\n        /**\r\n         * A boolean determining whether or not the connection will be encrypted. Set to true if you're on\r\n         * Windows Azure. (default: true).\r\n         */\r\n        readonly encrypt?: boolean\r\n\r\n        /**\r\n         * When encryption is used, an object may be supplied that will be used for the first argument when calling\r\n         * tls.createSecurePair (default: {}).\r\n         */\r\n        readonly cryptoCredentialsDetails?: any\r\n\r\n        /**\r\n         * A boolean, that when true will expose received rows in Requests' done* events. See done, doneInProc and\r\n         * doneProc. (default: false)\r\n         * Caution: If many row are received, enabling this option could result in excessive memory usage.\r\n         */\r\n        readonly rowCollectionOnDone?: boolean\r\n\r\n        /**\r\n         * A boolean, that when true will expose received rows in Requests' completion callback. See new Request. (default: false)\r\n         * Caution: If many row are received, enabling this option could result in excessive memory usage.\r\n         */\r\n        readonly rowCollectionOnRequestCompletion?: boolean\r\n\r\n        /**\r\n         * The version of TDS to use. If server doesn't support specified version, negotiated version is used instead.\r\n         * The versions are available from require('tedious').TDS_VERSION. (default: 7_4).\r\n         */\r\n        readonly tdsVersion?: string\r\n\r\n        /**\r\n         * A boolean, that when true will abort a query when an overflow or divide-by-zero error occurs during query execution.\r\n         */\r\n        readonly enableArithAbort?: boolean\r\n\r\n        /**\r\n         * Application name used for identifying a specific application in profiling, logging or tracing tools of SQL Server.\r\n         * (default: node-mssql)\r\n         */\r\n        readonly appName?: string\r\n\r\n        /**\r\n         * A boolean, controlling whether encryption occurs if there is no verifiable server certificate.\r\n         * (default: false)\r\n         */\r\n        readonly trustServerCertificate?: boolean\r\n    }\r\n\r\n    /**\r\n     * Replication setup.\r\n     */\r\n    readonly replication?: {\r\n        /**\r\n         * Master server used by orm to perform writes.\r\n         */\r\n        readonly master: SqlServerConnectionCredentialsOptions\r\n\r\n        /**\r\n         * List of read-from servers (slaves).\r\n         */\r\n        readonly slaves: SqlServerConnectionCredentialsOptions[]\r\n\r\n        /**\r\n         * Default connection pool to use for SELECT queries\r\n         * @default \"slave\"\r\n         */\r\n        readonly defaultMode?: ReplicationMode\r\n    }\r\n\r\n    readonly poolSize?: never\r\n}\r\n"],"sourceRoot":"../.."}