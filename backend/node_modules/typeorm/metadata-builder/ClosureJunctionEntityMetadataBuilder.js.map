{"version":3,"sources":["../../src/metadata-builder/ClosureJunctionEntityMetadataBuilder.ts"],"names":[],"mappings":"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","file":"ClosureJunctionEntityMetadataBuilder.js","sourcesContent":["import { EntityMetadata } from \"../metadata/EntityMetadata\"\r\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\"\r\nimport { ForeignKeyMetadata } from \"../metadata/ForeignKeyMetadata\"\r\nimport { DataSource } from \"../data-source/DataSource\"\r\nimport { IndexMetadata } from \"../metadata/IndexMetadata\"\r\n\r\n/**\r\n * Creates EntityMetadata for junction tables of the closure entities.\r\n * Closure junction tables are tables generated by closure entities.\r\n */\r\nexport class ClosureJunctionEntityMetadataBuilder {\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(private connection: DataSource) {}\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Builds EntityMetadata for the closure junction of the given closure entity.\r\n     */\r\n    build(parentClosureEntityMetadata: EntityMetadata) {\r\n        // create entity metadata itself\r\n        const entityMetadata = new EntityMetadata({\r\n            parentClosureEntityMetadata: parentClosureEntityMetadata,\r\n            connection: this.connection,\r\n            args: {\r\n                target: \"\",\r\n                name:\r\n                    parentClosureEntityMetadata.treeOptions &&\r\n                    parentClosureEntityMetadata.treeOptions.closureTableName\r\n                        ? parentClosureEntityMetadata.treeOptions\r\n                              .closureTableName\r\n                        : parentClosureEntityMetadata.tableNameWithoutPrefix,\r\n                type: \"closure-junction\",\r\n            },\r\n        })\r\n        entityMetadata.build()\r\n\r\n        // create ancestor and descendant columns for new closure junction table\r\n        parentClosureEntityMetadata.primaryColumns.forEach((primaryColumn) => {\r\n            entityMetadata.ownColumns.push(\r\n                new ColumnMetadata({\r\n                    connection: this.connection,\r\n                    entityMetadata: entityMetadata,\r\n                    closureType: \"ancestor\",\r\n                    referencedColumn: primaryColumn,\r\n                    args: {\r\n                        target: \"\",\r\n                        mode: \"virtual\",\r\n                        propertyName:\r\n                            parentClosureEntityMetadata.treeOptions &&\r\n                            parentClosureEntityMetadata.treeOptions\r\n                                .ancestorColumnName\r\n                                ? parentClosureEntityMetadata.treeOptions.ancestorColumnName(\r\n                                      primaryColumn,\r\n                                  )\r\n                                : primaryColumn.propertyName + \"_ancestor\",\r\n                        options: {\r\n                            primary: true,\r\n                            length: primaryColumn.length,\r\n                            type: primaryColumn.type,\r\n                        },\r\n                    },\r\n                }),\r\n            )\r\n            entityMetadata.ownColumns.push(\r\n                new ColumnMetadata({\r\n                    connection: this.connection,\r\n                    entityMetadata: entityMetadata,\r\n                    closureType: \"descendant\",\r\n                    referencedColumn: primaryColumn,\r\n                    args: {\r\n                        target: \"\",\r\n                        mode: \"virtual\",\r\n                        propertyName:\r\n                            parentClosureEntityMetadata.treeOptions &&\r\n                            parentClosureEntityMetadata.treeOptions\r\n                                .descendantColumnName\r\n                                ? parentClosureEntityMetadata.treeOptions.descendantColumnName(\r\n                                      primaryColumn,\r\n                                  )\r\n                                : primaryColumn.propertyName + \"_descendant\",\r\n                        options: {\r\n                            primary: true,\r\n                            length: primaryColumn.length,\r\n                            type: primaryColumn.type,\r\n                        },\r\n                    },\r\n                }),\r\n            )\r\n        })\r\n\r\n        entityMetadata.ownIndices = [\r\n            new IndexMetadata({\r\n                entityMetadata: entityMetadata,\r\n                columns: [entityMetadata.ownColumns[0]],\r\n                args: {\r\n                    target: entityMetadata.target,\r\n                    synchronize: true,\r\n                },\r\n            }),\r\n            new IndexMetadata({\r\n                entityMetadata: entityMetadata,\r\n                columns: [entityMetadata.ownColumns[1]],\r\n                args: {\r\n                    target: entityMetadata.target,\r\n                    synchronize: true,\r\n                },\r\n            }),\r\n        ]\r\n\r\n        // if tree level column was defined by a closure entity then add it to the junction columns as well\r\n        if (parentClosureEntityMetadata.treeLevelColumn) {\r\n            entityMetadata.ownColumns.push(\r\n                new ColumnMetadata({\r\n                    connection: this.connection,\r\n                    entityMetadata: entityMetadata,\r\n                    args: {\r\n                        target: \"\",\r\n                        mode: \"virtual\",\r\n                        propertyName: \"level\",\r\n                        options: {\r\n                            type: this.connection.driver.mappedDataTypes\r\n                                .treeLevel,\r\n                        },\r\n                    },\r\n                }),\r\n            )\r\n        }\r\n\r\n        // create junction table foreign keys\r\n        // Note: CASCADE is not applied to mssql because it does not support multi cascade paths\r\n        entityMetadata.foreignKeys = [\r\n            new ForeignKeyMetadata({\r\n                entityMetadata: entityMetadata,\r\n                referencedEntityMetadata: parentClosureEntityMetadata,\r\n                columns: [entityMetadata.ownColumns[0]],\r\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\r\n                onDelete:\r\n                    this.connection.driver.options.type === \"mssql\"\r\n                        ? \"NO ACTION\"\r\n                        : \"CASCADE\",\r\n            }),\r\n            new ForeignKeyMetadata({\r\n                entityMetadata: entityMetadata,\r\n                referencedEntityMetadata: parentClosureEntityMetadata,\r\n                columns: [entityMetadata.ownColumns[1]],\r\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\r\n                onDelete:\r\n                    this.connection.driver.options.type === \"mssql\"\r\n                        ? \"NO ACTION\"\r\n                        : \"CASCADE\",\r\n            }),\r\n        ]\r\n\r\n        return entityMetadata\r\n    }\r\n}\r\n"],"sourceRoot":".."}