{"version":3,"sources":["../../src/naming-strategy/LegacyOracleNamingStrategy.ts"],"names":[],"mappings":";;;AACA,6DAAyD;AACzD,mEAA+D;AAC/D,oCAAuC;AAOvC;;;;;GAKG;AACH,MAAa,0BACT,SAAQ,6CAAqB;IAO7B,YAAY,kBAAmC,MAAM;QACjD,KAAK,EAAE,CAAA;QALK,wBAAmB,GAAG,EAAE,CAAA;QACxB,0BAAqB,GAAG,MAAM,CAAA;QAK1C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAA;IAC1C,CAAC;IAED,UAAU,CACN,YAAoB,EACpB,UAAkB,EAClB,gBAA0B;QAE1B,MAAM,QAAQ,GAAW,KAAK,CAAC,UAAU,CACrC,YAAY,EACZ,UAAU,EACV,gBAAgB,CACnB,CAAA;QACD,IAAI,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAA;QAC5C,CAAC;aAAM,IAAI,IAAI,CAAC,eAAe,KAAK,MAAM,EAAE,CAAC;YACzC,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAA;QACpE,CAAC;aAAM,CAAC;YACJ,MAAM,IAAI,oBAAY,CAAC,yBAAyB,CAAC,CAAA;QACrD,CAAC;IACL,CAAC;IAES,cAAc,CAAC,KAAa,EAAE,MAAc;QAClD,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC5C,MAAM,IAAI,oBAAY,CAClB,iDAAiD,CACpD,CAAA;QACL,CAAC;QACD,OAAO,CACH,MAAM;YACN,iCAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACjC,CAAC,EACD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAC3C,CACJ,CAAA;IACL,CAAC;IAES,kBAAkB,CAAC,KAAa;QACtC,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC1C,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAA;QACvD,CAAC;aAAM,CAAC;YACJ,OAAO,KAAK,CAAA;QAChB,CAAC;IACL,CAAC;CACJ;AAtDD,gEAsDC","file":"LegacyOracleNamingStrategy.js","sourcesContent":["import { NamingStrategyInterface } from \"./NamingStrategyInterface\"\r\nimport { RandomGenerator } from \"../util/RandomGenerator\"\r\nimport { DefaultNamingStrategy } from \"./DefaultNamingStrategy\"\r\nimport { TypeORMError } from \"../error\"\r\n\r\n/**\r\n * Shorten strategy\r\n */\r\nexport type ShortenStrategy = \"truncate\" | \"hash\"\r\n\r\n/**\r\n * Naming strategy for legacy Oracle database with 30 bytes identifier limit.\r\n *\r\n * Currently, only column name must be shorten in order to avoid ORA-00972.\r\n * Issues with other identifiers were fixed.\r\n */\r\nexport class LegacyOracleNamingStrategy\r\n    extends DefaultNamingStrategy\r\n    implements NamingStrategyInterface\r\n{\r\n    public readonly IDENTIFIER_MAX_SIZE = 30\r\n    public readonly DEFAULT_COLUMN_PREFIX = \"COL_\"\r\n    protected shortenStrategy: ShortenStrategy\r\n\r\n    constructor(shortenStrategy: ShortenStrategy = \"hash\") {\r\n        super()\r\n        this.shortenStrategy = shortenStrategy\r\n    }\r\n\r\n    columnName(\r\n        propertyName: string,\r\n        customName: string,\r\n        embeddedPrefixes: string[],\r\n    ): string {\r\n        const longName: string = super.columnName(\r\n            propertyName,\r\n            customName,\r\n            embeddedPrefixes,\r\n        )\r\n        if (this.shortenStrategy === \"truncate\") {\r\n            return this.truncateIdentifier(longName)\r\n        } else if (this.shortenStrategy === \"hash\") {\r\n            return this.hashIdentifier(longName, this.DEFAULT_COLUMN_PREFIX)\r\n        } else {\r\n            throw new TypeORMError(`Invalid shortenStrategy`)\r\n        }\r\n    }\r\n\r\n    protected hashIdentifier(input: string, prefix: string): string {\r\n        if (prefix.length >= this.IDENTIFIER_MAX_SIZE) {\r\n            throw new TypeORMError(\r\n                `Prefix must be shorter than IDENTIFIER_MAX_SIZE`,\r\n            )\r\n        }\r\n        return (\r\n            prefix +\r\n            RandomGenerator.sha1(input).substring(\r\n                0,\r\n                this.IDENTIFIER_MAX_SIZE - prefix.length,\r\n            )\r\n        )\r\n    }\r\n\r\n    protected truncateIdentifier(input: string): string {\r\n        if (input.length > this.IDENTIFIER_MAX_SIZE) {\r\n            return input.substring(0, this.IDENTIFIER_MAX_SIZE)\r\n        } else {\r\n            return input\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}